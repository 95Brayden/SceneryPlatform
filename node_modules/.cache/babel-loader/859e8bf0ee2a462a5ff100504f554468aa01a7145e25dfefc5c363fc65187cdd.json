{"ast":null,"code":"import { BaseClient, BaseResponse } from './base.js';\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n  get status() {\n    return this.response.status;\n  }\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n  async getData() {\n    const data = this.response.arrayBuffer ? await this.response.arrayBuffer() : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n  async request({\n    headers,\n    credentials,\n    signal\n  } = {}) {\n    const response = await fetch(this.url, {\n      headers,\n      credentials,\n      signal\n    });\n    return new FetchResponse(response);\n  }\n}","map":{"version":3,"names":["BaseClient","BaseResponse","FetchResponse","constructor","response","status","getHeader","name","headers","get","getData","data","arrayBuffer","buffer","FetchClient","url","credentials","request","signal","fetch"],"sources":["E:/Desktop/SceneryPlatform_v3.0_LTS/node_modules/geotiff/dist-module/source/client/fetch.js"],"sourcesContent":["import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request({ headers, credentials, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAQ,WAAW;AAEpD,MAAMC,aAAa,SAASD,YAAY,CAAC;EACvC;AACF;AACA;AACA;EACEE,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACD,QAAQ,CAACC,MAAM;EAC7B;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,OAAO,IAAI,CAACH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACxC;EAEA,MAAMG,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAI,GAAG,IAAI,CAACP,QAAQ,CAACQ,WAAW,GAClC,MAAM,IAAI,CAACR,QAAQ,CAACQ,WAAW,CAAC,CAAC,GACjC,CAAC,MAAM,IAAI,CAACR,QAAQ,CAACS,MAAM,CAAC,CAAC,EAAEA,MAAM;IACzC,OAAOF,IAAI;EACb;AACF;AAEA,OAAO,MAAMG,WAAW,SAASd,UAAU,CAAC;EAC1CG,WAAWA,CAACY,GAAG,EAAEC,WAAW,EAAE;IAC5B,KAAK,CAACD,GAAG,CAAC;IACV,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EAEA,MAAMC,OAAOA,CAAC;IAAET,OAAO;IAAEQ,WAAW;IAAEE;EAAO,CAAC,GAAG,CAAC,CAAC,EAAE;IACnD,MAAMd,QAAQ,GAAG,MAAMe,KAAK,CAAC,IAAI,CAACJ,GAAG,EAAE;MACrCP,OAAO;MAAEQ,WAAW;MAAEE;IACxB,CAAC,CAAC;IACF,OAAO,IAAIhB,aAAa,CAACE,QAAQ,CAAC;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}