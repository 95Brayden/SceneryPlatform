{"ast":null,"code":"import { ArrayBufferPrototypeGetByteLength, ArrayIsArray, ArrayIteratorPrototype, ArrayIteratorPrototypeNext, MathTrunc, NativeArrayPrototypeSymbolIterator, NativeSharedArrayBuffer, NativeTypedArrayPrototypeSymbolIterator, NumberIsFinite, SharedArrayBufferPrototypeGetByteLength, SymbolIterator, TypedArrayPrototypeGetSymbolToStringTag } from \"./primordials.mjs\";\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObject(value) {\n  return value !== null && typeof value === \"object\" || typeof value === \"function\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\n\n// Inspired by util.types implementation of Node.js\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isNativeTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is BigInt64Array|BigUint64Array}\n */\nexport function isNativeBigIntTypedArray(value) {\n  const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n  return typedArrayName === \"BigInt64Array\" || typedArrayName === \"BigUint64Array\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer}\n */\nfunction isArrayBuffer(value) {\n  try {\n    ArrayBufferPrototypeGetByteLength( /** @type {any} */value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is SharedArrayBuffer}\n */\nexport function isSharedArrayBuffer(value) {\n  if (NativeSharedArrayBuffer === null) {\n    return false;\n  }\n  try {\n    SharedArrayBufferPrototypeGetByteLength( /** @type {any} */value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer|SharedArrayBuffer}\n */\nexport function isAnyArrayBuffer(value) {\n  return isArrayBuffer(value) || isSharedArrayBuffer(value);\n}\n\n/**\n * @param {unknown} value\n * @returns {value is unknown[]}\n */\nexport function isOrdinaryArray(value) {\n  if (!ArrayIsArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return value[SymbolIterator] === NativeArrayPrototypeSymbolIterator && ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isOrdinaryNativeTypedArray(value) {\n  if (!isNativeTypedArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator && ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is string}\n */\nexport function isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const number = +value;\n  if (value !== number + \"\") {\n    return false;\n  }\n  if (!NumberIsFinite(number)) {\n    return false;\n  }\n  return number === MathTrunc(number);\n}","map":{"version":3,"names":["ArrayBufferPrototypeGetByteLength","ArrayIsArray","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","MathTrunc","NativeArrayPrototypeSymbolIterator","NativeSharedArrayBuffer","NativeTypedArrayPrototypeSymbolIterator","NumberIsFinite","SharedArrayBufferPrototypeGetByteLength","SymbolIterator","TypedArrayPrototypeGetSymbolToStringTag","isObject","value","isObjectLike","isNativeTypedArray","undefined","isNativeBigIntTypedArray","typedArrayName","isArrayBuffer","e","isSharedArrayBuffer","isAnyArrayBuffer","isOrdinaryArray","next","isOrdinaryNativeTypedArray","isCanonicalIntegerIndexString","number"],"sources":["E:/Desktop/scenerymonitor/node_modules/@petamoriken/float16/src/_util/is.mjs"],"sourcesContent":["import {\n  ArrayBufferPrototypeGetByteLength,\n  ArrayIsArray,\n  ArrayIteratorPrototype,\n  ArrayIteratorPrototypeNext,\n  MathTrunc,\n  NativeArrayPrototypeSymbolIterator,\n  NativeSharedArrayBuffer,\n  NativeTypedArrayPrototypeSymbolIterator,\n  NumberIsFinite,\n  SharedArrayBufferPrototypeGetByteLength,\n  SymbolIterator,\n  TypedArrayPrototypeGetSymbolToStringTag,\n} from \"./primordials.mjs\";\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObject(value) {\n  return (\n    (value !== null && typeof value === \"object\") ||\n    typeof value === \"function\"\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\n\n// Inspired by util.types implementation of Node.js\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isNativeTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is BigInt64Array|BigUint64Array}\n */\nexport function isNativeBigIntTypedArray(value) {\n  const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n  return (\n    typedArrayName === \"BigInt64Array\" ||\n    typedArrayName === \"BigUint64Array\"\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer}\n */\nfunction isArrayBuffer(value) {\n  try {\n    ArrayBufferPrototypeGetByteLength(/** @type {any} */ (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is SharedArrayBuffer}\n */\nexport function isSharedArrayBuffer(value) {\n  if (NativeSharedArrayBuffer === null) {\n    return false;\n  }\n\n  try {\n    SharedArrayBufferPrototypeGetByteLength(/** @type {any} */ (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer|SharedArrayBuffer}\n */\nexport function isAnyArrayBuffer(value) {\n  return isArrayBuffer(value) || isSharedArrayBuffer(value);\n}\n\n/**\n * @param {unknown} value\n * @returns {value is unknown[]}\n */\nexport function isOrdinaryArray(value) {\n  if (!ArrayIsArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return (\n    value[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isOrdinaryNativeTypedArray(value) {\n  if (!isNativeTypedArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return (\n    value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is string}\n */\nexport function isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  const number = +value;\n  if (value !== number + \"\") {\n    return false;\n  }\n\n  if (!NumberIsFinite(number)) {\n    return false;\n  }\n\n  return number === MathTrunc(number);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}