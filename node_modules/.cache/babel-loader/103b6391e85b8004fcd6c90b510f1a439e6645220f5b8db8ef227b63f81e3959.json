{"ast":null,"code":"import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n  get status() {\n    return this.xhr.status;\n  }\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n  async getData() {\n    return this.data;\n  }\n}\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n  async request({\n    headers,\n    signal\n  } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}","map":{"version":3,"names":["BaseClient","BaseResponse","AbortError","XHRResponse","constructor","xhr","data","status","getHeader","name","getResponseHeader","getData","XHRClient","constructRequest","headers","signal","Promise","resolve","reject","XMLHttpRequest","open","url","responseType","key","value","Object","entries","setRequestHeader","onload","response","onerror","onabort","send","aborted","abort","addEventListener","request"],"sources":["E:/Desktop/scenerymonitor/node_modules/geotiff/dist-module/source/client/xhr.js"],"sourcesContent":["import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAQ,WAAW;AACpD,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,MAAMC,WAAW,SAASF,YAAY,CAAC;EACrC;AACF;AACA;AACA;AACA;EACEG,WAAWA,CAACC,GAAG,EAAEC,IAAI,EAAE;IACrB,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,GAAG,CAACE,MAAM;EACxB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,OAAO,IAAI,CAACJ,GAAG,CAACK,iBAAiB,CAACD,IAAI,CAAC;EACzC;EAEA,MAAME,OAAOA,CAAA,EAAG;IACd,OAAO,IAAI,CAACL,IAAI;EAClB;AACF;AAEA,OAAO,MAAMM,SAAS,SAASZ,UAAU,CAAC;EACxCa,gBAAgBA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMb,GAAG,GAAG,IAAIc,cAAc,CAAC,CAAC;MAChCd,GAAG,CAACe,IAAI,CAAC,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC;MACzBhB,GAAG,CAACiB,YAAY,GAAG,aAAa;MAChC,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACZ,OAAO,CAAC,EAAE;QAClDT,GAAG,CAACsB,gBAAgB,CAACJ,GAAG,EAAEC,KAAK,CAAC;MAClC;;MAEA;MACAnB,GAAG,CAACuB,MAAM,GAAG,MAAM;QACjB,MAAMtB,IAAI,GAAGD,GAAG,CAACwB,QAAQ;QACzBZ,OAAO,CAAC,IAAId,WAAW,CAACE,GAAG,EAAEC,IAAI,CAAC,CAAC;MACrC,CAAC;MACDD,GAAG,CAACyB,OAAO,GAAGZ,MAAM;MACpBb,GAAG,CAAC0B,OAAO,GAAG,MAAMb,MAAM,CAAC,IAAIhB,UAAU,CAAC,iBAAiB,CAAC,CAAC;MAC7DG,GAAG,CAAC2B,IAAI,CAAC,CAAC;MAEV,IAAIjB,MAAM,EAAE;QACV,IAAIA,MAAM,CAACkB,OAAO,EAAE;UAClB5B,GAAG,CAAC6B,KAAK,CAAC,CAAC;QACb;QACAnB,MAAM,CAACoB,gBAAgB,CAAC,OAAO,EAAE,MAAM9B,GAAG,CAAC6B,KAAK,CAAC,CAAC,CAAC;MACrD;IACF,CAAC,CAAC;EACJ;EAEA,MAAME,OAAOA,CAAC;IAAEtB,OAAO;IAAEC;EAAO,CAAC,GAAG,CAAC,CAAC,EAAE;IACtC,MAAMc,QAAQ,GAAG,MAAM,IAAI,CAAChB,gBAAgB,CAACC,OAAO,EAAEC,MAAM,CAAC;IAC7D,OAAOc,QAAQ;EACjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}