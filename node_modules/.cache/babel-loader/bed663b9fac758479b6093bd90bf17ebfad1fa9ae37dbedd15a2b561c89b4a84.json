{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();","map":{"version":3,"names":["asString","IconImageCache","constructor","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","i","key","iconImage","hasListener","get","src","crossOrigin","color","getKey","set","setSize","maxCacheSize","colorString","shared"],"sources":["E:/Desktop/scenerymonitor/node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,QAAQ,QAAO,aAAa;;AAEpC;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;;IAEhB;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,EAAE;EACzB;;EAEA;AACF;AACA;EACEC,KAAKA,CAAA,EAAG;IACN,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACC,UAAU,GAAG,CAAC;EACrB;;EAEA;AACF;AACA;EACEG,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACH,UAAU,GAAG,IAAI,CAACC,aAAa;EAC7C;;EAEA;AACF;AACA;EACEG,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACD,cAAc,CAAC,CAAC,EAAE;MACzB,IAAIE,CAAC,GAAG,CAAC;MACT,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACP,MAAM,EAAE;QAC7B,MAAMQ,SAAS,GAAG,IAAI,CAACR,MAAM,CAACO,GAAG,CAAC;QAClC,IAAI,CAACD,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAACE,SAAS,CAACC,WAAW,CAAC,CAAC,EAAE;UAC/C,OAAO,IAAI,CAACT,MAAM,CAACO,GAAG,CAAC;UACvB,EAAE,IAAI,CAACN,UAAU;QACnB;MACF;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACES,GAAGA,CAACC,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAC3B,MAAMN,GAAG,GAAGO,MAAM,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,CAAC;IAC3C,OAAON,GAAG,IAAI,IAAI,CAACP,MAAM,GAAG,IAAI,CAACA,MAAM,CAACO,GAAG,CAAC,GAAG,IAAI;EACrD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEQ,GAAGA,CAACJ,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAEL,SAAS,EAAE;IACtC,MAAMD,GAAG,GAAGO,MAAM,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,CAAC;IAC3C,IAAI,CAACb,MAAM,CAACO,GAAG,CAAC,GAAGC,SAAS;IAC5B,EAAE,IAAI,CAACP,UAAU;EACnB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEe,OAAOA,CAACC,YAAY,EAAE;IACpB,IAAI,CAACf,aAAa,GAAGe,YAAY;IACjC,IAAI,CAACZ,MAAM,CAAC,CAAC;EACf;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,MAAMA,CAACH,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;EACvC,MAAMK,WAAW,GAAGL,KAAK,GAAGhB,QAAQ,CAACgB,KAAK,CAAC,GAAG,MAAM;EACpD,OAAOD,WAAW,GAAG,GAAG,GAAGD,GAAG,GAAG,GAAG,GAAGO,WAAW;AACpD;AAEA,eAAepB,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMqB,MAAM,GAAG,IAAIrB,cAAc,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}