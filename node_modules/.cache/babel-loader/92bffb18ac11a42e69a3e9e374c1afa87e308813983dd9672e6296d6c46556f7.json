{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */map.getView();\n    let geometry = this.getGeometry();\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n}\nexport default DragZoom;","map":{"version":3,"names":["DragBox","easeOut","shiftKeyOnly","DragZoom","constructor","options","condition","className","minArea","duration_","duration","undefined","out_","out","onBoxEnd","event","map","getMap","view","getView","geometry","getGeometry","rotatedExtent","rotatedExtentForGeometry","resolution","getResolutionForExtentInternal","factor","getResolution","clone","scale","fitInternal","easing"],"sources":["E:/Desktop/scenerymonitor/node_modules/ol/interaction/DragZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,cAAc;AAClC,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,YAAY,QAAO,wBAAwB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASH,OAAO,CAAC;EAC7B;AACF;AACA;EACEI,WAAWA,CAACC,OAAO,EAAE;IACnBA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,MAAMC,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGJ,YAAY;IAEtE,KAAK,CAAC;MACJI,SAAS,EAAEA,SAAS;MACpBC,SAAS,EAAEF,OAAO,CAACE,SAAS,IAAI,aAAa;MAC7CC,OAAO,EAAEH,OAAO,CAACG;IACnB,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAGJ,OAAO,CAACK,QAAQ,KAAKC,SAAS,GAAGN,OAAO,CAACK,QAAQ,GAAG,GAAG;;IAExE;AACJ;AACA;AACA;IACI,IAAI,CAACE,IAAI,GAAGP,OAAO,CAACQ,GAAG,KAAKF,SAAS,GAAGN,OAAO,CAACQ,GAAG,GAAG,KAAK;EAC7D;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACC,KAAK,EAAE;IACd,MAAMC,GAAG,GAAG,IAAI,CAACC,MAAM,CAAC,CAAC;IACzB,MAAMC,IAAI,GAAG,4CAA8CF,GAAG,CAACG,OAAO,CAAC,CAAE;IACzE,IAAIC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAEjC,IAAI,IAAI,CAACT,IAAI,EAAE;MACb,MAAMU,aAAa,GAAGJ,IAAI,CAACK,wBAAwB,CAACH,QAAQ,CAAC;MAC7D,MAAMI,UAAU,GAAGN,IAAI,CAACO,8BAA8B,CAACH,aAAa,CAAC;MACrE,MAAMI,MAAM,GAAGR,IAAI,CAACS,aAAa,CAAC,CAAC,GAAGH,UAAU;MAChDJ,QAAQ,GAAGA,QAAQ,CAACQ,KAAK,CAAC,CAAC;MAC3BR,QAAQ,CAACS,KAAK,CAACH,MAAM,GAAGA,MAAM,CAAC;IACjC;IAEAR,IAAI,CAACY,WAAW,CAACV,QAAQ,EAAE;MACzBV,QAAQ,EAAE,IAAI,CAACD,SAAS;MACxBsB,MAAM,EAAE9B;IACV,CAAC,CAAC;EACJ;AACF;AAEA,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}