{"ast":null,"code":"import { isObject, isSharedArrayBuffer } from \"./is.mjs\";\nimport { THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT, THIS_IS_NOT_AN_OBJECT } from \"./messages.mjs\";\nimport { ArrayBufferPrototypeSlice, MAX_SAFE_INTEGER, MathTrunc, NativeTypeError, NumberIsNaN, ObjectIs, SymbolSpecies } from \"./primordials.mjs\";\n\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToIntegerOrInfinity(target) {\n  const number = +target;\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n  return MathTrunc(number);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n  return length < MAX_SAFE_INTEGER ? length : MAX_SAFE_INTEGER;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {{ new(...args: any[]): any; }} defaultConstructor\n * @returns {{ new(...args: any[]): any; }}\n */\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n  return species;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-isdetachedbuffer\n * @param {ArrayBufferLike} buffer\n * @returns {boolean}\n */\nexport function IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {/* empty */}\n  return true;\n}\n\n/**\n * bigint comparisons are not supported\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n  if (isXNaN) {\n    return 1;\n  }\n  if (isYNaN) {\n    return -1;\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n  return 0;\n}","map":{"version":3,"names":["isObject","isSharedArrayBuffer","THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT","THIS_IS_NOT_AN_OBJECT","ArrayBufferPrototypeSlice","MAX_SAFE_INTEGER","MathTrunc","NativeTypeError","NumberIsNaN","ObjectIs","SymbolSpecies","ToIntegerOrInfinity","target","number","ToLength","length","SpeciesConstructor","defaultConstructor","constructor","undefined","species","IsDetachedBuffer","buffer","e","defaultCompare","x","y","isXNaN","isYNaN","isXPlusZero","isYPlusZero"],"sources":["E:/Desktop/SceneryPlatform_v3.0_LTS/node_modules/@petamoriken/float16/src/_util/spec.mjs"],"sourcesContent":["import { isObject, isSharedArrayBuffer } from \"./is.mjs\";\nimport {\n  THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT,\n  THIS_IS_NOT_AN_OBJECT,\n} from \"./messages.mjs\";\nimport {\n  ArrayBufferPrototypeSlice,\n  MAX_SAFE_INTEGER,\n  MathTrunc,\n  NativeTypeError,\n  NumberIsNaN,\n  ObjectIs,\n  SymbolSpecies,\n} from \"./primordials.mjs\";\n\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToIntegerOrInfinity(target) {\n  const number = +target;\n\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n\n  return MathTrunc(number);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n\n  return length < MAX_SAFE_INTEGER\n    ? length\n    : MAX_SAFE_INTEGER;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {{ new(...args: any[]): any; }} defaultConstructor\n * @returns {{ new(...args: any[]): any; }}\n */\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n\n  return species;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-isdetachedbuffer\n * @param {ArrayBufferLike} buffer\n * @returns {boolean}\n */\nexport function IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {/* empty */}\n\n  return true;\n}\n\n/**\n * bigint comparisons are not supported\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n\n  if (isXNaN) {\n    return 1;\n  }\n\n  if (isYNaN) {\n    return -1;\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (x > y) {\n    return 1;\n  }\n\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}