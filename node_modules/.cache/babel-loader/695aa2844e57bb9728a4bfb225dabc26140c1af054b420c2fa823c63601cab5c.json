{"ast":null,"code":"/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { decodeFallback } from '../Image.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ = image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */this.image_.src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_).then(image => {\n        this.image_ = image;\n        this.handleImageLoad_();\n      }).catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio] || this.imageState_ !== ImageState.LOADED) {\n      return;\n    }\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage = cacheKey === undefined ? undefined : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, image instanceof HTMLImageElement ? image.src || undefined : cacheKey, crossOrigin, imageState, color);\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\nexport default IconImage;","map":{"version":3,"names":["EventTarget","EventType","ImageState","asString","createCanvasContext2D","decodeFallback","shared","iconImageCache","taintedTestContext","IconImage","constructor","image","src","crossOrigin","imageState","color","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","undefined","IDLE","size_","width","height","src_","tainted_","initializeImage_","Image","isTainted_","LOADED","willReadFrequently","drawImage","getImageData","e","dispatchChangeEvent_","dispatchEvent","CHANGE","handleImageError_","ERROR","handleImageLoad_","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","load","LOADING","HTMLImageElement","then","catch","bind","document","createElement","Math","ceil","ctx","getContext","scale","globalCompositeOperation","fillStyle","get","cacheKey","iconImage","set"],"sources":["E:/Desktop/scenerymonitor/node_modules/ol/style/IconImage.js"],"sourcesContent":["/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}