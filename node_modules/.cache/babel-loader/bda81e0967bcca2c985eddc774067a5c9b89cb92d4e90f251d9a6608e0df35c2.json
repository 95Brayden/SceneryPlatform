{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport { getIntersection } from './extent.js';\nexport { default as BingMaps } from './source/BingMaps.js';\nexport { default as CartoDB } from './source/CartoDB.js';\nexport { default as Cluster } from './source/Cluster.js';\nexport { default as DataTile } from './source/DataTile.js';\nexport { default as GeoTIFF } from './source/GeoTIFF.js';\nexport { default as IIIF } from './source/IIIF.js';\nexport { default as Image } from './source/Image.js';\nexport { default as ImageArcGISRest } from './source/ImageArcGISRest.js';\nexport { default as ImageCanvas } from './source/ImageCanvas.js';\nexport { default as ImageMapGuide } from './source/ImageMapGuide.js';\nexport { default as ImageStatic } from './source/ImageStatic.js';\nexport { default as ImageWMS } from './source/ImageWMS.js';\nexport { default as OGCMapTile } from './source/OGCMapTile.js';\nexport { default as OGCVectorTile } from './source/OGCVectorTile.js';\nexport { default as OSM } from './source/OSM.js';\nexport { default as Raster } from './source/Raster.js';\nexport { default as Source } from './source/Source.js';\nexport { default as StadiaMaps } from './source/StadiaMaps.js';\nexport { default as Tile } from './source/Tile.js';\nexport { default as TileArcGISRest } from './source/TileArcGISRest.js';\nexport { default as TileDebug } from './source/TileDebug.js';\nexport { default as TileImage } from './source/TileImage.js';\nexport { default as TileJSON } from './source/TileJSON.js';\nexport { default as TileWMS } from './source/TileWMS.js';\nexport { default as UrlTile } from './source/UrlTile.js';\nexport { default as UTFGrid } from './source/UTFGrid.js';\nexport { default as Vector } from './source/Vector.js';\nexport { default as VectorTile } from './source/VectorTile.js';\nexport { default as WMTS } from './source/WMTS.js';\nexport { default as XYZ } from './source/XYZ.js';\nexport { default as Zoomify } from './source/Zoomify.js';\nexport { createLoader as createWMSLoader } from './source/wms.js';\nexport { createLoader as createArcGISRestLoader } from './source/arcgisRest.js';\nexport { createLoader as createStaticLoader } from './source/static.js';\nexport { createLoader as createMapGuideLoader } from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, tileCoord => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}","map":{"version":3,"names":["LRUCache","getIntersection","default","BingMaps","CartoDB","Cluster","DataTile","GeoTIFF","IIIF","Image","ImageArcGISRest","ImageCanvas","ImageMapGuide","ImageStatic","ImageWMS","OGCMapTile","OGCVectorTile","OSM","Raster","Source","StadiaMaps","Tile","TileArcGISRest","TileDebug","TileImage","TileJSON","TileWMS","UrlTile","UTFGrid","Vector","VectorTile","WMTS","XYZ","Zoomify","createLoader","createWMSLoader","createArcGISRestLoader","createStaticLoader","createMapGuideLoader","sourcesFromTileGrid","tileGrid","factory","sourceCache","tileGridExtent","getExtent","extent","resolution","expireCache","z","getZForResolution","wantedSources","forEachTileCoord","tileCoord","key","toString","containsKey","source","set","push","get"],"sources":["E:/Desktop/SceneryPlatform_v3.0_LTS/node_modules/ol/source.js"],"sourcesContent":["/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}