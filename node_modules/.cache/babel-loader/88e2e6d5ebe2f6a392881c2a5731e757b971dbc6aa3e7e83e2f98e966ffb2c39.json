{"ast":null,"code":"/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(slices.map(slice => this.fetchSlice(slice, signal)));\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n  async close() {\n    // no-op by default\n  }\n}","map":{"version":3,"names":["BaseSource","fetch","slices","signal","undefined","Promise","all","map","slice","fetchSlice","Error","fileSize","close"],"sources":["E:/Desktop/scenerymonitor/node_modules/geotiff/dist-module/source/basesource.js"],"sourcesContent":["/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,UAAU,CAAC;EACtB;AACF;AACA;AACA;AACA;EACE,MAAMC,KAAKA,CAACC,MAAM,EAAEC,MAAM,GAAGC,SAAS,EAAE;IACtC,OAAOC,OAAO,CAACC,GAAG,CAChBJ,MAAM,CAACK,GAAG,CAAEC,KAAK,IAAK,IAAI,CAACC,UAAU,CAACD,KAAK,EAAEL,MAAM,CAAC,CACtD,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMM,UAAUA,CAACD,KAAK,EAAE;IACtB,MAAM,IAAIE,KAAK,CAAE,qBAAoBF,KAAM,gCAA+B,CAAC;EAC7E;;EAEA;AACF;AACA;EACE,IAAIG,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI;EACb;EAEA,MAAMC,KAAKA,CAAA,EAAG;IACZ;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}