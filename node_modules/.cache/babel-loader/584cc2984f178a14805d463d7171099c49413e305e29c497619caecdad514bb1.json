{"ast":null,"code":"import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\nimport { XYZ, Vector } from \"ol/source\";\nimport { Group as LayerGroup } from 'ol/layer.js';\nimport { Style, Stroke, Fill, Circle, Text, Icon } from \"ol/style\";\nimport { Point } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport { Feature } from 'ol';\nimport { map } from \"core-js/internals/array-iteration\";\nexport default {\n  getBaseMapLayerGroup(type) {\n    //获取底图图层\n    var tiandiImg = new TileLayer({\n      name: \"天地图影像图层\",\n      source: new XYZ({\n        url: \"http://t0.tianditu.com/DataServer?T=img_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      })\n    });\n    var tiandiImgMarker = new TileLayer({\n      name: \"天地图影像注记图层\",\n      source: new XYZ({\n        url: \"http://t0.tianditu.com/DataServer?T=cia_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      })\n    });\n    var tiandiImgGroup = new LayerGroup({\n      layers: [tiandiImg, tiandiImgMarker]\n    });\n    var tiandiImgOnlyGroup = new LayerGroup({\n      layers: [tiandiImg]\n    });\n    var tiandiVector = new TileLayer({\n      source: new XYZ({\n        url: \"http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      }),\n      name: \"天地图矢量图层\"\n    });\n    var tiandiVectorMarker = new TileLayer({\n      source: new XYZ({\n        url: \"http://t0.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      }),\n      name: \"天地图矢量图层注记\"\n    });\n    var tiandiVectorGroup = new LayerGroup({\n      layers: [tiandiVector, tiandiVectorMarker]\n    });\n    var tiandiTerrain = new TileLayer({\n      source: new XYZ({\n        url: \"http://t{0-7}.tianditu.gov.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      }),\n      name: \"地形图矢量图层\"\n    });\n    var tiandiTerrainMarker = new TileLayer({\n      source: new XYZ({\n        url: \"http://t{0-7}.tianditu.gov.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\n        wrapX: false\n      }),\n      name: \"地形图矢量图层注记\"\n    });\n    var tiandiTerrainGroup = new LayerGroup({\n      layers: [tiandiTerrain, tiandiTerrainMarker]\n    });\n    var gaodeVector = new TileLayer({\n      source: new XYZ({\n        url: 'http://webrd0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\n        wrapX: false\n      }),\n      name: \"高德地图矢量图层\"\n    });\n    var gaodeVectorGroup = new LayerGroup({\n      layers: [gaodeVector]\n    });\n    var gaodeImg = new TileLayer({\n      source: new XYZ({\n        url: 'http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n        wrapX: false\n      }),\n      name: \"高德地图影像图层\"\n    });\n    var gaodeImgMarker = new TileLayer({\n      source: new XYZ({\n        url: 'http://webst0{1-4}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}',\n        wrapX: false\n      }),\n      name: \"高德地图影像标记图层\"\n    });\n    var gaodeImgGroup = new LayerGroup({\n      layers: [gaodeImg, gaodeImgMarker]\n    });\n    var geoqPurplishBlue = new TileLayer({\n      source: new XYZ({\n        url: 'https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}',\n        wrapX: false\n      }),\n      name: \"智图深蓝图层\"\n    });\n    var geoqPurplishBlueGroup = new LayerGroup({\n      layers: [geoqPurplishBlue]\n    });\n    var geoqGray = new TileLayer({\n      source: new XYZ({\n        url: 'https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\n        wrapX: false\n      }),\n      name: \"智图灰度图层\"\n    });\n    var geoqGrayGroup = new LayerGroup({\n      layers: [geoqGray]\n    });\n    var esriWorldImagery = new TileLayer({\n      source: new XYZ({\n        url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.jpg',\n        wrapX: false\n      }),\n      name: \"ArcGIS影像图\"\n    });\n    var esriWorldImageryGroup = new LayerGroup({\n      layers: [esriWorldImagery]\n    });\n    var Esri_DarkGreyCanvas = new TileLayer({\n      source: new XYZ({\n        url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}',\n        wrapX: false\n      }),\n      name: \"ArcGIS深蓝图层\"\n    });\n    var esriDarkGreyCanvasGroup = new LayerGroup({\n      layers: [Esri_DarkGreyCanvas]\n    });\n    if (type == 'tianditu_image') {\n      //天地图影像图及标记\n      return tiandiImgGroup;\n    } else if (type == 'tianditu_image_only') {\n      //仅是天地图影像\n      return tiandiImgOnlyGroup;\n    } else if (type == 'tianditu_vector') {\n      //天地图矢量图及标记\n      return tiandiVectorGroup;\n    } else if (type == 'tianditu_terrain') {\n      //天地图地形图及标记\n      return tiandiTerrainGroup;\n    } else if (type == 'gaode_vector') {\n      //高德地图矢量图及标记\n      return gaodeVectorGroup;\n    } else if (type == 'gaode_img') {\n      //高德地图影像标记图层\n      return gaodeImgGroup;\n    } else if (type == 'geoq_purplishblue') {\n      //智图深蓝图层\n      return geoqPurplishBlueGroup;\n    } else if (type == 'geoq_gray') {\n      //智图灰度图层\n      return geoqGrayGroup;\n    } else if (type == 'esri_worldimagery') {\n      //ArcGIS影像图\n      return esriWorldImageryGroup;\n    } else if (type == 'esri_darkgreycanvas') {\n      //ArcGIS深蓝图层\n      return esriDarkGreyCanvasGroup;\n    }\n  },\n  styleFunction(feature, resolution) {\n    //根据要素类型设置几何要素的样式\n    var image = new Circle({\n      radius: 5,\n      fill: null,\n      stroke: new Stroke({\n        color: 'red',\n        width: 1\n      })\n    });\n    var styles = {\n      'Point': [new Style({\n        //点样式\n        image: image\n      })],\n      'LineString': [new Style({\n        stroke: new Stroke({\n          //线的边界样式\n          color: 'green',\n          width: 1\n        })\n      })],\n      'MultiLineString': [new Style({\n        stroke: new Stroke({\n          //多线的边界样式\n          color: 'green',\n          width: 1\n        })\n      })],\n      'MultiPoint': [new Style({\n        //多点的点样式\n        image: image\n      })],\n      'MultiPolygon': [new Style({\n        stroke: new Stroke({\n          //多区的边界样式\n          color: 'yellow',\n          width: 2\n        }),\n        fill: new Fill({\n          //多区的填充样式\n          color: 'rgba(255, 255, 0, 0)'\n        })\n      })],\n      'Polygon': [new Style({\n        stroke: new Stroke({\n          //区的边界样式\n          color: 'blue',\n          lineDash: [4],\n          width: 3\n        }),\n        fill: new Fill({\n          //区的填充样式\n          color: 'rgba(0, 0, 255, 0)'\n        })\n      })],\n      'GeometryCollection': [new Style({\n        stroke: new Stroke({\n          //集合要素的边界样式\n          color: 'magenta',\n          width: 2\n        }),\n        fill: new Fill({\n          //集合要素的填充样式\n          color: 'magenta'\n        }),\n        image: new Circle({\n          //集合要素的点样式\n          radius: 10,\n          fill: null,\n          stroke: new Stroke({\n            color: 'magenta'\n          })\n        })\n      })],\n      'Circle': [new Style({\n        stroke: new Stroke({\n          //圆的边界样式\n          color: 'red',\n          width: 2\n        }),\n        fill: new Fill({\n          //圆的填充样式\n          color: 'rgba(255,0,0,0.2)'\n        })\n      })]\n    };\n    return styles[feature.getGeometry().getType()];\n  },\n  is_show_station(sta, select_sta_type) {\n    //判断台站是否为当前可显示的类型\n    var filerSign = true;\n    if (select_sta_type == \"all\") {\n      filerSign = false;\n    } else if (select_sta_type == \"scenic\") {\n      if (sta.sta_type == \"景区\") {\n        filerSign = false;\n      }\n    } else if (select_sta_type == \"protection\") {\n      if (sta.sta_type == \"文保\") {\n        filerSign = false;\n      }\n    } else if (select_sta_type == \"other\") {\n      if (sta.sta_type == \"其它\") {\n        filerSign = false;\n      }\n    }\n    return filerSign;\n  },\n  initMarkerByIntValue(data) {\n    //根据烈度数值获取图标颜色\n    var data = data;\n    var iconColor = \"#afafaf\"; //灰色\n    if (data < 0) {\n      iconColor = \"#afafaf\"; //灰色\n    } else if (data < 1) {\n      var iconColor = \"#60af38\";\n    } else if (data < 2) {\n      var iconColor = \"#f3e45e\";\n    } else if (data < 3) {\n      var iconColor = \"#f29438\";\n    } else if (data < 4) {\n      var iconColor = \"#ff5c49\";\n    } else if (data >= 4) {\n      var iconColor = \"#a704c8\";\n    }\n    return iconColor;\n  },\n  buildStationDivMarker(opt) {\n    //构建自定义台站图标\n    var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\n    var point = new Point(latLon);\n    var feature = new Feature(point);\n    feature.type = 'click_station';\n    feature.setId(opt.net_code + \".\" + opt.sta_code);\n    feature.setStyle(new Style({\n      image: new Circle({\n        radius: 12,\n        stroke: new Stroke({\n          color: 'gray'\n        }),\n        fill: new Fill({\n          color: this.initMarkerByIntValue(opt.channels[0].comp.int)\n        })\n      }),\n      text: new Text({\n        //位置\n        textAlign: 'center',\n        //基准线\n        textBaseline: 'middle',\n        //文字样式\n        font: 'normal 14px 微软雅黑',\n        //文本内容\n        text: opt.sta_code,\n        //文本填充样式（即文字颜色）\n        fill: new Fill({\n          color: 'gray'\n        }),\n        offsetY: 24,\n        scale: 1,\n        stroke: new Stroke({\n          color: 'gray',\n          width: 1\n        })\n      })\n    }));\n    return feature;\n  },\n  buildStationImageMarker(opt) {\n    //构建图片台站图标\n    var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\n    var point = new Point(latLon);\n    var feature = new Feature(point);\n    feature.type = 'click_station';\n    feature.setId(opt.net_code + \".\" + opt.sta_code);\n    var zoom = map.getView().getZoom();\n    feature.setStyle(zoom < 17 ? null : new Style({\n      image: new Icon({\n        anchor: [0.5, 40],\n        anchorOrigin: 'top-left',\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        offsetOrigin: 'top-right',\n        // offset:[0,10],\n        //图标缩放比例\n        // scale:0.5,\n        //透明度\n        opacity: 1,\n        //图标的url\n        src: '/static/images/marker/marker.png'\n      }),\n      text: new Text({\n        //位置\n        textAlign: 'center',\n        //基准线\n        textBaseline: 'middle',\n        //文字样式\n        font: 'normal 14px 微软雅黑',\n        //文本内容\n        text: opt.sta_name,\n        //文本填充样式（即文字颜色）\n        fill: new Fill({\n          color: '#008eff'\n        }),\n        offsetY: 12,\n        scale: 1,\n        stroke: new Stroke({\n          color: '#ffcc33',\n          width: 2\n        })\n      })\n    }));\n    return feature;\n  },\n  buildStationVectorMarker(opt) {\n    //构建矢量台站图标\n    var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\n    var point = new Point(latLon);\n    var feature = new Feature(point);\n    feature.type = 'click_station';\n    feature.setId(opt.net_code + \".\" + opt.sta_code);\n    var f_color = \"green\";\n    var f_radius = 10;\n    var image = new Circle({\n      radius: f_radius,\n      fill: new Fill({\n        color: f_color\n      }),\n      stroke: new Stroke({\n        color: 'black',\n        width: 1\n      })\n    });\n    feature.setStyle([new Style({\n      image: image,\n      text: new Text({\n        text: \"\",\n        offsetY: 1,\n        scale: 0.9,\n        fill: new Fill({\n          color: \"black\"\n        })\n      })\n    })]);\n    return feature;\n  }\n};","map":{"version":3,"names":["Tile","TileLayer","Vector","VectorLayer","XYZ","Group","LayerGroup","Style","Stroke","Fill","Circle","Text","Icon","Point","fromLonLat","Feature","map","getBaseMapLayerGroup","type","tiandiImg","name","source","url","wrapX","tiandiImgMarker","tiandiImgGroup","layers","tiandiImgOnlyGroup","tiandiVector","tiandiVectorMarker","tiandiVectorGroup","tiandiTerrain","tiandiTerrainMarker","tiandiTerrainGroup","gaodeVector","gaodeVectorGroup","gaodeImg","gaodeImgMarker","gaodeImgGroup","geoqPurplishBlue","geoqPurplishBlueGroup","geoqGray","geoqGrayGroup","esriWorldImagery","esriWorldImageryGroup","Esri_DarkGreyCanvas","esriDarkGreyCanvasGroup","styleFunction","feature","resolution","image","radius","fill","stroke","color","width","styles","lineDash","getGeometry","getType","is_show_station","sta","select_sta_type","filerSign","sta_type","initMarkerByIntValue","data","iconColor","buildStationDivMarker","opt","latLon","parseFloat","sta_lon","sta_lat","point","setId","net_code","sta_code","setStyle","channels","comp","int","text","textAlign","textBaseline","font","offsetY","scale","buildStationImageMarker","zoom","getView","getZoom","anchor","anchorOrigin","anchorXUnits","anchorYUnits","offsetOrigin","opacity","src","sta_name","buildStationVectorMarker","f_color","f_radius"],"sources":["E:/Desktop/scenerymonitor/src/js/mapcommon.js"],"sourcesContent":["import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\r\nimport { XYZ, Vector } from \"ol/source\";\r\nimport { Group as LayerGroup } from 'ol/layer.js';\r\nimport { Style, Stroke, Fill, Circle, Text, Icon } from \"ol/style\";\r\nimport { Point } from 'ol/geom';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport { Feature } from 'ol';\r\nimport {map} from \"core-js/internals/array-iteration\";\r\n\r\nexport default {\r\n    getBaseMapLayerGroup(type) {  //获取底图图层\r\n        var tiandiImg = new TileLayer({\r\n            name: \"天地图影像图层\",\r\n            source: new XYZ({\r\n                url: \"http://t0.tianditu.com/DataServer?T=img_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            })\r\n        });\r\n        var tiandiImgMarker = new TileLayer({\r\n            name: \"天地图影像注记图层\",\r\n            source: new XYZ({\r\n                url: \"http://t0.tianditu.com/DataServer?T=cia_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            })\r\n        });\r\n        var tiandiImgGroup = new LayerGroup({ layers: [tiandiImg, tiandiImgMarker] });\r\n        var tiandiImgOnlyGroup = new LayerGroup({ layers: [tiandiImg] });\r\n\r\n        var tiandiVector = new TileLayer({\r\n            source: new XYZ({\r\n                url: \"http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            }),\r\n            name: \"天地图矢量图层\",\r\n        });\r\n\r\n        var tiandiVectorMarker = new TileLayer({\r\n            source: new XYZ({\r\n                url: \"http://t0.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            }),\r\n            name: \"天地图矢量图层注记\",\r\n        });\r\n        var tiandiVectorGroup = new LayerGroup({ layers: [tiandiVector, tiandiVectorMarker] });\r\n\r\n        var tiandiTerrain = new TileLayer({\r\n            source: new XYZ({\r\n                url: \"http://t{0-7}.tianditu.gov.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            }),\r\n            name: \"地形图矢量图层\",\r\n        });\r\n\r\n        var tiandiTerrainMarker = new TileLayer({\r\n            source: new XYZ({\r\n                url: \"http://t{0-7}.tianditu.gov.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}&tk=cd7516c53e2e5bee9bad989b63db6ce4\",\r\n                wrapX: false\r\n            }),\r\n            name: \"地形图矢量图层注记\",\r\n        });\r\n        var tiandiTerrainGroup = new LayerGroup({ layers: [tiandiTerrain, tiandiTerrainMarker] });\r\n\r\n        var gaodeVector = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://webrd0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\r\n                wrapX: false\r\n            }),\r\n            name: \"高德地图矢量图层\",\r\n        });\r\n        var gaodeVectorGroup = new LayerGroup({ layers: [gaodeVector] });\r\n\r\n        var gaodeImg = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\r\n                wrapX: false\r\n            }),\r\n            name: \"高德地图影像图层\",\r\n        });\r\n        var gaodeImgMarker = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://webst0{1-4}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}',\r\n                wrapX: false\r\n            }),\r\n            name: \"高德地图影像标记图层\",\r\n        });\r\n        var gaodeImgGroup = new LayerGroup({ layers: [gaodeImg, gaodeImgMarker] });\r\n\r\n        var geoqPurplishBlue = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}',\r\n                wrapX: false\r\n            }),\r\n            name: \"智图深蓝图层\",\r\n        });\r\n        var geoqPurplishBlueGroup = new LayerGroup({ layers: [geoqPurplishBlue] });\r\n\r\n        var geoqGray = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}',\r\n                wrapX: false\r\n            }),\r\n            name: \"智图灰度图层\",\r\n        });\r\n        var geoqGrayGroup = new LayerGroup({ layers: [geoqGray] });\r\n\r\n        var esriWorldImagery = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.jpg',\r\n                wrapX: false\r\n            }),\r\n            name: \"ArcGIS影像图\",\r\n        });\r\n        var esriWorldImageryGroup = new LayerGroup({ layers: [esriWorldImagery] });\r\n\r\n        var Esri_DarkGreyCanvas = new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}',\r\n                wrapX: false\r\n            }),\r\n            name: \"ArcGIS深蓝图层\",\r\n        });\r\n        var esriDarkGreyCanvasGroup = new LayerGroup({ layers: [Esri_DarkGreyCanvas] });\r\n\r\n\r\n        if (type == 'tianditu_image') {  //天地图影像图及标记\r\n            return tiandiImgGroup;\r\n        } else if (type == 'tianditu_image_only') {  //仅是天地图影像\r\n            return tiandiImgOnlyGroup;\r\n        } else if (type == 'tianditu_vector') {  //天地图矢量图及标记\r\n            return tiandiVectorGroup;\r\n        } else if (type == 'tianditu_terrain') {  //天地图地形图及标记\r\n            return tiandiTerrainGroup;\r\n        } else if (type == 'gaode_vector') {  //高德地图矢量图及标记\r\n            return gaodeVectorGroup;\r\n        } else if (type == 'gaode_img') {  //高德地图影像标记图层\r\n            return gaodeImgGroup;\r\n        } else if (type == 'geoq_purplishblue') {  //智图深蓝图层\r\n            return geoqPurplishBlueGroup;\r\n        } else if (type == 'geoq_gray') {  //智图灰度图层\r\n            return geoqGrayGroup;\r\n        } else if (type == 'esri_worldimagery') {  //ArcGIS影像图\r\n            return esriWorldImageryGroup;\r\n        } else if (type == 'esri_darkgreycanvas') {  //ArcGIS深蓝图层\r\n            return esriDarkGreyCanvasGroup;\r\n        }\r\n    },\r\n    styleFunction(feature, resolution) { //根据要素类型设置几何要素的样式\r\n        var image = new Circle({\r\n            radius: 5,\r\n            fill: null,\r\n            stroke: new Stroke({ color: 'red', width: 1 })\r\n        });\r\n        var styles = {\r\n            'Point': [\r\n                new Style({\r\n                    //点样式\r\n                    image: image\r\n                })\r\n            ],\r\n            'LineString': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //线的边界样式\r\n                        color: 'green',\r\n                        width: 1\r\n                    })\r\n                })\r\n            ],\r\n            'MultiLineString': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //多线的边界样式\r\n                        color: 'green',\r\n                        width: 1\r\n                    })\r\n                })\r\n            ],\r\n            'MultiPoint': [\r\n                new Style({\r\n                    //多点的点样式\r\n                    image: image\r\n                })\r\n            ],\r\n            'MultiPolygon': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //多区的边界样式\r\n                        color: 'yellow',\r\n                        width: 2\r\n                    }),\r\n                    fill: new Fill({\r\n                        //多区的填充样式\r\n                        color: 'rgba(255, 255, 0, 0)'\r\n                    })\r\n                })\r\n            ],\r\n            'Polygon': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //区的边界样式\r\n                        color: 'blue',\r\n                        lineDash: [4],\r\n                        width: 3\r\n                    }),\r\n                    fill: new Fill({\r\n                        //区的填充样式\r\n                        color: 'rgba(0, 0, 255, 0)'\r\n                    })\r\n                })\r\n            ],\r\n            'GeometryCollection': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //集合要素的边界样式\r\n                        color: 'magenta',\r\n                        width: 2\r\n                    }),\r\n                    fill: new Fill({\r\n                        //集合要素的填充样式\r\n                        color: 'magenta'\r\n                    }),\r\n                    image: new Circle({\r\n                        //集合要素的点样式\r\n                        radius: 10,\r\n                        fill: null,\r\n                        stroke: new Stroke({\r\n                            color: 'magenta'\r\n                        })\r\n                    })\r\n                })\r\n            ],\r\n            'Circle': [\r\n                new Style({\r\n                    stroke: new Stroke({\r\n                        //圆的边界样式\r\n                        color: 'red',\r\n                        width: 2\r\n                    }),\r\n                    fill: new Fill({\r\n                        //圆的填充样式\r\n                        color: 'rgba(255,0,0,0.2)'\r\n                    })\r\n                })\r\n            ]\r\n        };\r\n        return styles[feature.getGeometry().getType()];\r\n    },\r\n    is_show_station(sta, select_sta_type) { //判断台站是否为当前可显示的类型\r\n        var filerSign = true;\r\n        if (select_sta_type == \"all\") {\r\n            filerSign = false;\r\n        } else if (select_sta_type == \"scenic\") {\r\n            if (sta.sta_type == \"景区\") {\r\n                filerSign = false;\r\n            }\r\n        } else if (select_sta_type == \"protection\") {\r\n            if (sta.sta_type == \"文保\") {\r\n                filerSign = false;\r\n            }\r\n        } else if (select_sta_type == \"other\") {\r\n            if (sta.sta_type == \"其它\") {\r\n                filerSign = false;\r\n            }\r\n        }\r\n        return filerSign;\r\n    },\r\n    initMarkerByIntValue(data) { //根据烈度数值获取图标颜色\r\n        var data = data;\r\n        var iconColor = \"#afafaf\"; //灰色\r\n        if (data < 0) {\r\n            iconColor = \"#afafaf\"; //灰色\r\n        } else if (data < 1) {\r\n            var iconColor = \"#60af38\";\r\n        } else if (data < 2) {\r\n            var iconColor = \"#f3e45e\";\r\n        } else if (data < 3) {\r\n            var iconColor = \"#f29438\";\r\n        } else if (data < 4) {\r\n            var iconColor = \"#ff5c49\";\r\n        } else if (data >= 4) {\r\n            var iconColor = \"#a704c8\";\r\n        }\r\n        return iconColor;\r\n    },\r\n    buildStationDivMarker(opt) { //构建自定义台站图标\r\n        var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\r\n        var point = new Point(latLon);\r\n        var feature = new Feature(point);\r\n        feature.type = 'click_station';\r\n        feature.setId(opt.net_code + \".\" + opt.sta_code);\r\n        feature.setStyle(new Style({\r\n            image: new Circle({\r\n                radius: 12,\r\n                stroke: new Stroke({\r\n                    color: 'gray'\r\n                }),\r\n                fill: new Fill({\r\n                    color: this.initMarkerByIntValue(opt.channels[0].comp.int)\r\n                })\r\n            }),\r\n            text: new Text({\r\n                //位置\r\n                textAlign: 'center',\r\n                //基准线\r\n                textBaseline: 'middle',\r\n                //文字样式\r\n                font: 'normal 14px 微软雅黑',\r\n                //文本内容\r\n                text: opt.sta_code,\r\n                //文本填充样式（即文字颜色）\r\n                fill: new Fill({ color: 'gray' }),\r\n                offsetY: 24,\r\n                scale: 1,\r\n                stroke: new Stroke({ color: 'gray', width: 1 })\r\n            })\r\n        }));\r\n        return feature;\r\n\r\n    },\r\n    buildStationImageMarker(opt) { //构建图片台站图标\r\n        var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\r\n        var point = new Point(latLon);\r\n        var feature = new Feature(point);\r\n        feature.type = 'click_station';\r\n        feature.setId(opt.net_code + \".\" + opt.sta_code);\r\n        var zoom = map.getView().getZoom();\r\n\r\n        feature.setStyle(zoom<17? null:new Style({\r\n            image: new Icon(\r\n                ({\r\n                    anchor: [0.5, 40],\r\n                    anchorOrigin: 'top-left',\r\n                    anchorXUnits: 'fraction',\r\n                    anchorYUnits: 'pixels',\r\n                    offsetOrigin: 'top-right',\r\n                    // offset:[0,10],\r\n                    //图标缩放比例\r\n                    // scale:0.5,\r\n                    //透明度\r\n                    opacity: 1,\r\n                    //图标的url\r\n                    src: '/static/images/marker/marker.png'\r\n                })),\r\n            text: new Text({\r\n                //位置\r\n                textAlign: 'center',\r\n                //基准线\r\n                textBaseline: 'middle',\r\n                //文字样式\r\n                font: 'normal 14px 微软雅黑',\r\n                //文本内容\r\n                text: opt.sta_name,\r\n                //文本填充样式（即文字颜色）\r\n                fill: new Fill({ color: '#008eff' }),\r\n                offsetY: 12,\r\n                scale: 1,\r\n                stroke: new Stroke({ color: '#ffcc33', width: 2 })\r\n            })\r\n        }));\r\n        return feature;\r\n    },\r\n    buildStationVectorMarker(opt) {  //构建矢量台站图标\r\n        var latLon = [parseFloat(opt.sta_lon), parseFloat(opt.sta_lat)];\r\n        var point = new Point(latLon);\r\n        var feature = new Feature(point);\r\n        feature.type = 'click_station';\r\n        feature.setId(opt.net_code + \".\" + opt.sta_code);\r\n        var f_color = \"green\";\r\n        var f_radius = 10;\r\n        var image = new Circle({\r\n            radius: f_radius,\r\n            fill: new Fill({\r\n                color: f_color\r\n            }),\r\n            stroke: new Stroke({\r\n                color: 'black',\r\n                width: 1\r\n            })\r\n        });\r\n\r\n        feature.setStyle([new Style({\r\n            image: image,\r\n            text: new Text({\r\n                text: \"\",\r\n                offsetY: 1,\r\n                scale: 0.9,\r\n                fill: new Fill({\r\n                    color: \"black\"\r\n                })\r\n            })\r\n        })]);\r\n        return feature;\r\n\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}