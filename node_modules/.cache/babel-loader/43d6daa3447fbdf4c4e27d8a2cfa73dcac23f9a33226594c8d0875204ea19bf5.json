{"ast":null,"code":"/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, coordinates) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatess) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, coordinatesss) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = ends.length === 1 && ends[0] === offset ? [] : inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}","map":{"version":3,"names":["inflateCoordinates","flatCoordinates","offset","end","stride","coordinates","undefined","i","j","slice","length","inflateCoordinatesArray","ends","coordinatess","jj","inflateMultiCoordinatesArray","endss","coordinatesss"],"sources":["E:/Desktop/scenerymonitor/node_modules/ol/geom/flat/inflate.js"],"sourcesContent":["/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAChCC,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNC,WAAW,EACX;EACAA,WAAW,GAAGA,WAAW,KAAKC,SAAS,GAAGD,WAAW,GAAG,EAAE;EAC1D,IAAIE,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAGN,MAAM,EAAEM,CAAC,GAAGL,GAAG,EAAEK,CAAC,IAAIJ,MAAM,EAAE;IACzCC,WAAW,CAACE,CAAC,EAAE,CAAC,GAAGN,eAAe,CAACQ,KAAK,CAACD,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAAC;EACzD;EACAC,WAAW,CAACK,MAAM,GAAGH,CAAC;EACtB,OAAOF,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,uBAAuBA,CACrCV,eAAe,EACfC,MAAM,EACNU,IAAI,EACJR,MAAM,EACNS,YAAY,EACZ;EACAA,YAAY,GAAGA,YAAY,KAAKP,SAAS,GAAGO,YAAY,GAAG,EAAE;EAC7D,IAAIN,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEM,EAAE,GAAGF,IAAI,CAACF,MAAM,EAAEF,CAAC,GAAGM,EAAE,EAAE,EAAEN,CAAC,EAAE;IAC7C,MAAML,GAAG,GAAGS,IAAI,CAACJ,CAAC,CAAC;IACnBK,YAAY,CAACN,CAAC,EAAE,CAAC,GAAGP,kBAAkB,CACpCC,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNS,YAAY,CAACN,CAAC,CAChB,CAAC;IACDL,MAAM,GAAGC,GAAG;EACd;EACAU,YAAY,CAACH,MAAM,GAAGH,CAAC;EACvB,OAAOM,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,4BAA4BA,CAC1Cd,eAAe,EACfC,MAAM,EACNc,KAAK,EACLZ,MAAM,EACNa,aAAa,EACb;EACAA,aAAa,GAAGA,aAAa,KAAKX,SAAS,GAAGW,aAAa,GAAG,EAAE;EAChE,IAAIV,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEM,EAAE,GAAGE,KAAK,CAACN,MAAM,EAAEF,CAAC,GAAGM,EAAE,EAAE,EAAEN,CAAC,EAAE;IAC9C,MAAMI,IAAI,GAAGI,KAAK,CAACR,CAAC,CAAC;IACrBS,aAAa,CAACV,CAAC,EAAE,CAAC,GAChBK,IAAI,CAACF,MAAM,KAAK,CAAC,IAAIE,IAAI,CAAC,CAAC,CAAC,KAAKV,MAAM,GACnC,EAAE,GACFS,uBAAuB,CACrBV,eAAe,EACfC,MAAM,EACNU,IAAI,EACJR,MAAM,EACNa,aAAa,CAACV,CAAC,CACjB,CAAC;IACPL,MAAM,GAAGU,IAAI,CAACA,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC;EAChC;EACAO,aAAa,CAACP,MAAM,GAAGH,CAAC;EACxB,OAAOU,aAAa;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}