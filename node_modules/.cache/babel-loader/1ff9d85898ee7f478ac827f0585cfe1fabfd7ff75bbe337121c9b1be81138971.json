{"ast":null,"code":"/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super( /** @type {import(\"./Interaction.js\").InteractionOptions} */options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution !== undefined ? options.constrainResolution : false;\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly ? all(focusWithTabindex, condition) : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(undefined, this.lastDelta_ ? this.lastDelta_ > 0 ? 1 : -1 : 0, this.lastAnchor_);\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */\n    mapBrowserEvent.originalEvent;\n    wheelEvent.preventDefault();\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n    const now = Date.now();\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n    const view = map.getView();\n    if (this.mode_ === 'trackpad' && !(view.getConstrainResolution() || this.constrainResolution_)) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n    this.totalDelta_ += delta;\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? delta > 0 ? 1 : -1 : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\nexport default MouseWheelZoom;","map":{"version":3,"names":["EventType","Interaction","zoomByDelta","DEVICE_PIXEL_RATIO","FIREFOX","all","always","focusWithTabindex","clamp","MouseWheelZoom","constructor","options","totalDelta_","lastDelta_","maxDelta_","maxDelta","undefined","duration_","duration","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","condition","condition_","onFocusOnly","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","map","getMap","view","getView","endInteraction","handleEvent","mapBrowserEvent","type","WHEEL","wheelEvent","originalEvent","preventDefault","coordinate","delta","deltaY","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","Math","abs","getConstrainResolution","clearTimeout","getAnimating","cancelAnimations","beginInteraction","setTimeout","bind","adjustZoom","timeLeft","max","handleWheelZoom_","setMouseAnchor"],"sources":["E:/Desktop/SceneryPlatform_v3.0_LTS/node_modules/ol/interaction/MouseWheelZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}