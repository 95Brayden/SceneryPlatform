{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/images/topmenu/top_baselayer.png';\nimport _imports_1 from '@/assets/images/topmenu/top_range.png';\nimport _imports_2 from '@/assets/images/topmenu/top_marker.png';\nimport _imports_3 from '@/assets/images/topmenu/top_count.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ol_map\",\n  id: \"ol_map\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"left_menu_bar\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"bt\",\n  action: \"zoom_in\"\n}, \"地图放大\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"bt\",\n  action: \"zoom_out\"\n}, \"地图缩小\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"mesure\",\n  action: \"mesure_line\"\n}, \"测量距离\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"mesure\",\n  action: \"mesure_area\"\n}, \"测量面积\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"theme\",\n  action: \"cluster_layer\"\n}, \"聚合图层\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_bt_item\",\n  type: \"theme\",\n  action: \"heat_layer\"\n}, \"热力图层\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"div_xy\\\"></div><div class=\\\"top-menu-bar d-flex j-center a-center\\\"><div class=\\\"menu-bt-bg\\\" type=\\\"baselayer\\\"><img src=\\\"\" + _imports_0 + \"\\\" width=\\\"40\\\" height=\\\"40\\\"></div><div class=\\\"menu-bt-bg\\\" type=\\\"rangelayer\\\"><img src=\\\"\" + _imports_1 + \"\\\" width=\\\"40\\\" height=\\\"40\\\"></div><div class=\\\"menu-bt-bg\\\" type=\\\"marker\\\"><img src=\\\"\" + _imports_2 + \"\\\" width=\\\"40\\\" height=\\\"40\\\"></div><div class=\\\"menu-bt-bg\\\" type=\\\"countinfo\\\"><img src=\\\"\" + _imports_3 + \"\\\" width=\\\"40\\\" height=\\\"40\\\"></div></div>\", 2);\nconst _hoisted_11 = {\n  class: \"show_windows_900\",\n  id: \"m_site_info\",\n  style: {\n    \"display\": \"block\",\n    \"height\": \"850px\"\n  }\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<a style=\\\"float:right;\\\"><i class=\\\"show_windows_title_close\\\" id=\\\"m_site_info_close\\\"></i></a><div class=\\\"show_windows_title\\\"><p>基本信息</p></div><div class=\\\"show_windows_content_padding\\\"><table class=\\\"table_default\\\"><tr class=\\\"tr_title\\\"><td>景点名称</td><td>景点类型</td><td>景点级别</td></tr><tr class=\\\"tr_content\\\"><td><p id=\\\"sta_name\\\">黄鹤楼</p></td><td><p id=\\\"sta_type\\\">文化保护单位</p></td><td><p id=\\\"site_level\\\">全国重点</p></td></tr><tr class=\\\"tr_title\\\"><td>所属区域</td><td colspan=\\\"2\\\">景点地址</td></tr><tr class=\\\"tr_content\\\"><td><p id=\\\"site_range\\\">武昌区</p></td><td colspan=\\\"2\\\"><p id=\\\"site_adress\\\">湖北省武汉市武昌区蛇山西山坡1号</p></td></tr></table></div><div class=\\\"show_windows_title margin-top-5\\\"><p>景点信息</p></div><div class=\\\"show_windows_content_padding\\\"><table class=\\\"table_default\\\"><tr class=\\\"tr_title\\\"><td>区域代码</td><td>景点代码</td><td>景点位置</td></tr><tr class=\\\"tr_content\\\"><td><p id=\\\"net_code\\\">WL</p></td><td><p id=\\\"sta_code\\\">WLL06</p></td><td><p id=\\\"loc\\\">114.306439,30.544481</p></td></tr></table></div><div class=\\\"show_windows_title margin-top-5\\\"><p>景区简介</p></div><div class=\\\"show_windows_content_padding\\\"><div class=\\\"show_windows_content_pic\\\" id=\\\"site_pic\\\"><img src=\\\"/static/images/show/00009.jpg\\\" width=\\\"100%\\\"></div><div class=\\\"show_windows_content_introduce\\\" id=\\\"site_introduce\\\">         黄鹤楼位于湖北省武汉市武昌区蛇山西山坡，是国家5A级旅游景区，为中国古代四大名楼之一。楼高五层，主体建筑高度达到51.4米，是集古代建筑艺术与长江美景于一体的旅游胜地。 </div></div><div class=\\\"show_windows_title margin-top-5\\\"><p>景点详情</p></div>\", 8);\nconst _hoisted_20 = {\n  class: \"show_windows_content_padding\",\n  id: \"site_url\"\n};\nconst _hoisted_21 = {\n  key: 1,\n  class: \"show_windows_content_introduce\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_basemap_menu = _resolveComponent(\"basemap_menu\");\n  const _component_range_menu = _resolveComponent(\"range_menu\");\n  const _component_type_menu = _resolveComponent(\"type_menu\");\n  const _component_count_menu = _resolveComponent(\"count_menu\");\n  const _component_add_site = _resolveComponent(\"add-site\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", {\n    class: \"left_bt_item\",\n    type: \"add\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleAddSiteForm && $options.toggleAddSiteForm(...args))\n  }, \"添加站点\"), _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8]), _hoisted_9, _createVNode(_component_basemap_menu), _createVNode(_component_range_menu), _createVNode(_component_type_menu), _createVNode(_component_count_menu), _createVNode(_component_add_site), _createCommentVNode(\"景点基本信息弹出框\"), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_20, [$data.siteUrl ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"left_bt_item\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToSite && $options.goToSite(...args))\n  }, \"点击查看景区详情\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_21, \"         暂无官方网址\"))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_createElementVNode","class","id","type","action","style","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","toggleAddSiteForm","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","_component_basemap_menu","_component_range_menu","_component_type_menu","_component_count_menu","_component_add_site","_createCommentVNode","_hoisted_11","_hoisted_12","_hoisted_20","$data","siteUrl","_createElementBlock","goToSite","_hoisted_21"],"sources":["E:\\Desktop\\scenerymonitor\\src\\views\\home.vue"],"sourcesContent":["<template>\r\n    <div class=\"ol_map\" id=\"ol_map\"></div>\r\n    <div class=\"left_menu_bar\">\r\n        <div class=\"left_bt_item\" type=\"bt\" action=\"zoom_in\">地图放大</div>\r\n        <div class=\"left_bt_item\" type=\"bt\" action=\"zoom_out\">地图缩小</div>\r\n        <div class=\"left_bt_item\" type=\"add\" @click=\"toggleAddSiteForm\">添加站点</div>\r\n        <div class=\"left_bt_item\" type=\"mesure\" action=\"mesure_line\">测量距离</div>\r\n        <div class=\"left_bt_item\" type=\"mesure\" action=\"mesure_area\">测量面积</div>\r\n        <div class=\"left_bt_item\" type=\"theme\" action=\"cluster_layer\">聚合图层</div>\r\n        <div class=\"left_bt_item\" type=\"theme\" action=\"heat_layer\">热力图层</div>\r\n    </div>\r\n\r\n    <div id=\"div_xy\"></div>\r\n    <div class=\"top-menu-bar d-flex j-center a-center\">\r\n        <div class=\"menu-bt-bg\" type=\"baselayer\"><img src=\"@/assets/images/topmenu/top_baselayer.png\" width=\"40\"\r\n                height=\"40\" /></div>\r\n        <div class=\"menu-bt-bg\" type=\"rangelayer\"><img src=\"@/assets/images/topmenu/top_range.png\" width=\"40\" height=\"40\" />\r\n        </div>\r\n        <div class=\"menu-bt-bg\" type=\"marker\"><img src=\"@/assets/images/topmenu/top_marker.png\" width=\"40\" height=\"40\" />\r\n        </div>\r\n        <div class=\"menu-bt-bg\" type=\"countinfo\"><img src=\"@/assets/images/topmenu/top_count.png\" width=\"40\" height=\"40\" />\r\n        </div>\r\n    </div>\r\n\r\n    <basemap_menu></basemap_menu>\r\n    <range_menu></range_menu>\r\n    <type_menu></type_menu>\r\n    <count_menu></count_menu>\r\n    <add-site></add-site>\r\n\r\n    <!--景点基本信息弹出框-->\r\n    <div class=\"show_windows_900\" id=\"m_site_info\" style=\"display: block; height: 850px;\">\r\n        <a style=\"float: right\"><i class=\"show_windows_title_close\" id=\"m_site_info_close\"></i></a>\r\n        <div class=\"show_windows_title\">\r\n            <p>基本信息</p>\r\n        </div>\r\n        <div class=\"show_windows_content_padding\">\r\n            <table class=\"table_default\">\r\n                <tr class=\"tr_title\">\r\n                    <td>景点名称</td>\r\n                    <td>景点类型</td>\r\n                    <td>景点级别</td>\r\n                </tr>\r\n                <tr class=\"tr_content\">\r\n                    <td>\r\n                        <p id=\"sta_name\">黄鹤楼</p>\r\n                    </td>\r\n                    <td>\r\n                        <p id=\"sta_type\">文化保护单位</p>\r\n                    </td>\r\n                    <td>\r\n                        <p id=\"site_level\">全国重点</p>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"tr_title\">\r\n                    <td>所属区域</td>\r\n                    <td colspan=\"2\">景点地址</td>\r\n                </tr>\r\n                <tr class=\"tr_content\">\r\n                    <td>\r\n                        <p id=\"site_range\">武昌区</p>\r\n                    </td>\r\n                    <td colspan=\"2\">\r\n                        <p id=\"site_adress\">湖北省武汉市武昌区蛇山西山坡1号</p>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"show_windows_title margin-top-5\">\r\n            <p>景点信息</p>\r\n        </div>\r\n        <div class=\"show_windows_content_padding\">\r\n            <table class=\"table_default\">\r\n                <tr class=\"tr_title\">\r\n                    <td>区域代码</td>\r\n                    <td>景点代码</td>\r\n                    <td>景点位置</td>\r\n                </tr>\r\n                <tr class=\"tr_content\">\r\n                    <td>\r\n                        <p id=\"net_code\">WL</p>\r\n                    </td>\r\n                    <td>\r\n                        <p id=\"sta_code\">WLL06</p>\r\n                    </td>\r\n                    <td>\r\n                        <p id=\"loc\">114.306439,30.544481</p>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"show_windows_title margin-top-5\">\r\n            <p>景区简介</p>\r\n        </div>\r\n        <div class=\"show_windows_content_padding\">\r\n            <div class=\"show_windows_content_pic\" id=\"site_pic\">\r\n                <img src=\"/static/images/show/00009.jpg\" width=\"100%\">\r\n            </div>\r\n            <div class=\"show_windows_content_introduce\" id=\"site_introduce\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;黄鹤楼位于湖北省武汉市武昌区蛇山西山坡，是国家5A级旅游景区，为中国古代四大名楼之一。楼高五层，主体建筑高度达到51.4米，是集古代建筑艺术与长江美景于一体的旅游胜地。\r\n            </div>\r\n        </div>\r\n      <div class=\"show_windows_title margin-top-5\">\r\n        <p>景点详情</p>\r\n      </div>\r\n      <div class=\"show_windows_content_padding\" id=\"site_url\">\r\n        <button v-if=\"siteUrl\" class=\"left_bt_item\" @click=\"goToSite\">点击查看景区详情</button>\r\n        <p v-else   class=\"show_windows_content_introduce\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;暂无官方网址</p>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery';\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport {Cluster, Vector as VectorSource} from 'ol/source';\r\nimport {Heatmap as HeatmapLayer, Vector as VectorLayer} from \"ol/layer\";\r\nimport { format } from 'ol/coordinate';\r\nimport { Style, Stroke, Fill, Circle as CircleStyle, Text, Icon } from \"ol/style\";\r\nimport MousePosition from \"ol/control/MousePosition.js\";\r\nimport {ScaleLine} from 'ol/control.js';\r\nimport Measure from \"@/js/measure\" // 空间测量\r\n\r\nimport mapcommon from '@/js/mapcommon';\r\nimport basemap_menu from '@/components/topmenu/basemap_menu.vue';\r\nimport range_menu from '@/components/topmenu/range_menu.vue';\r\nimport type_menu from '@/components/topmenu/type_menu.vue';\r\nimport count_menu from '@/components/topmenu/count_menu.vue';\r\nimport AddSite from '@/components/topmenu/add_site.vue'; // 导入 add_site.vue 组件\r\nimport {Feature} from \"ol\";\r\nimport {Point} from \"ol/geom\";\r\n\r\nexport default {\r\n    name: 'home',\r\n    components: {\r\n        basemap_menu,\r\n        range_menu,\r\n        type_menu,\r\n        count_menu,\r\n        AddSite\r\n    },\r\n    data() {\r\n        return {\r\n            map: null,  //地图对象\r\n            cur_basemap_select: null, //当前选择的底图图层\r\n            cur_basemap_type: \"esri_worldimagery\", //当前选择的底图图层名称\r\n            rangeLayer: null, //边界图层\r\n            select_sta_type: \"all\", //当前选择的显示景点类型\r\n            stationinfo_data_list: null,  //景点数据列表\r\n            cur_top_menu_select: null,  //当前顶部选择的菜单\r\n            staVectorSource: null,  //景点图标数组\r\n            staVectorLayer: null, //景点图标图层\r\n            cur_select_range_type: \"all\",\r\n            select_mesure_type : null, //当前选择的测量类型\r\n            siteUrl: \"http://www.cnhhl.com/index.php?m=History&a=index&id=71\", // 添加一个变量来保存官方网址\r\n            showAddSite: false,//是否显示添加站点框\r\n\r\n\r\n          //从event新增的data\r\n          select_theme_type: null,  //当前选择的专题图层\r\n          real_strong_data_list: null, //景点实时观测数据列表\r\n          real_strong_data_dict: {}, //各景点的最新强震动参数Hash数组\r\n          imageLayer: null, //图片图层\r\n          option_heatmap: {\r\n            blur: 43,\r\n            radius: 30\r\n          },\r\n          heatMapLayer: {},  //热力图层\r\n          heatData: {\r\n            type: \"FeatureCollection\",\r\n          },\r\n          clusterLayer: null,  //聚合图层对象\r\n\r\n          draw: null,\r\n\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        toggleAddSiteForm() {\r\n          // 切换 showAddSite 变量的状态来控制显示或隐藏 add_site.vue 组件\r\n          this.showAddSite = !this.showAddSite;\r\n          console.log(this.showAddSite); // 检查 showAddSite 的值\r\n        },\r\n        initMap() {  //初始化地图\r\n            this.map = new Map({\r\n                target: 'ol_map',\r\n                layers: [],\r\n                view: new View({\r\n                    projection: \"EPSG:4326\",\r\n                    center: [114.365248, 30.53786],\r\n                    zoom: 10,\r\n                }),\r\n            });\r\n            this.cur_basemap_select = mapcommon.getBaseMapLayerGroup(this.cur_basemap_type);\r\n            this.map.addLayer(this.cur_basemap_select);\r\n\r\n            //鼠标获取坐标控件\r\n            const mousePositionControl = new MousePosition({\r\n                coordinateFormat: function (coordinate) {\r\n                    return format(coordinate, '经纬度:{x},{y}', 4);\r\n                },\r\n                projection: 'EPSG:4326',\r\n                className: 'custom-mouse-position',\r\n                target: document.getElementById('div_xy'),\r\n                undefinedHTML: ' '\r\n            });\r\n            this.map.addControl(mousePositionControl);\r\n\r\n            //实例化比例尺控件（ScaleLine）\r\n            var scaleLineControl = new ScaleLine({\r\n                //设置比例尺单位，degrees、imperial、us、nautical、metric（度量单位）\r\n                units: \"metric\"\r\n            });\r\n            this.map.addControl(scaleLineControl);\r\n        },\r\n        changeBaseMap(type) { //更改底图图层\r\n            console.log(type);\r\n            if(type != \"\"){\r\n                this.cur_basemap_type = type;\r\n            }\r\n            if (this.cur_basemap_select != null) {\r\n                this.map.removeLayer(this.cur_basemap_select);\r\n            }\r\n            this.cur_basemap_select = mapcommon.getBaseMapLayerGroup(this.cur_basemap_type);\r\n            this.map.addLayer(this.cur_basemap_select);\r\n            this.addForestry(this.cur_select_range_type);\r\n\r\n        },\r\n        addForestry(type) { //添加边界\r\n            if(type != \"\"){\r\n                this.cur_select_range_type = type;\r\n            }\r\n            var m_url = \"/static/data/map/region.json?t=\" + new Date().getTime();\r\n            var m_weight = 3;\r\n            if (this.cur_select_range_type == 'city') {\r\n                m_url = \"/static/data/map/city.json?t=\" + new Date().getTime();\r\n                m_weight = 3;\r\n            } else if (this.cur_select_range_type == 'country') {\r\n                m_url = \"/static/data/map/region.json?t=\" + new Date().getTime();\r\n                m_weight = 2;\r\n            } else {\r\n                m_url = \"/static/data/map/province.json?t=\" + new Date().getTime();\r\n                m_weight = 1;\r\n            }\r\n\r\n            if (this.rangeLayer != null || this.rangeLayer == \"undefined\") {\r\n                //移除已有矢量图层\r\n                this.map.removeLayer(this.rangeLayer);\r\n            }\r\n            var vectorSource = new VectorSource({\r\n                url: m_url,\r\n                format: new GeoJSON()\r\n            });\r\n            this.rangeLayer = new VectorLayer({\r\n                //矢量数据源\r\n                source: vectorSource,\r\n                //样式设置\r\n                style: mapcommon.styleFunction\r\n            });\r\n\r\n\r\n            //将矢量图层加载到地图中\r\n            this.map.addLayer(this.rangeLayer);\r\n\r\n            this.rendStationInfoData(this.select_sta_type);\r\n\r\n        },\r\n        changeOneMarkerStatus(id, name, statusSign) {\r\n            var feature = this.staVectorSource.getFeatureById(id);\r\n            var img_url = '/static/images/marker/marker.png';\r\n            var fiil_color = '#008eff';\r\n            if (statusSign == 1) {\r\n                img_url = '/static/images/marker/marker_s.png';\r\n                fiil_color = 'red';\r\n            } else {\r\n                img_url = '/static/images/marker/marker.png';\r\n                fiil_color = '#008eff';\r\n            }\r\n            feature.setStyle(new Style({\r\n                image: new Icon(\r\n                    ({\r\n                        anchor: [0.5, 40],\r\n                        anchorOrigin: 'top-left',\r\n                        anchorXUnits: 'fraction',\r\n                        anchorYUnits: 'pixels',\r\n                        offsetOrigin: 'top-right',\r\n                        // offset:[0,10],\r\n                        //图标缩放比例\r\n                        // scale:0.5,\r\n                        //透明度\r\n                        opacity: 1,\r\n                        //图标的url\r\n                        src: img_url\r\n                    })),\r\n                text: new Text({\r\n                    //位置\r\n                    textAlign: 'center',\r\n                    //基准线\r\n                    textBaseline: 'middle',\r\n                    //文字样式\r\n                    font: 'normal 14px 微软雅黑',\r\n                    //文本内容\r\n                    text: name,\r\n                    //文本填充样式（即文字颜色）\r\n                    fill: new Fill({ color: fiil_color }),\r\n                    offsetY: 12,\r\n                    scale: 1,\r\n                    stroke: new Stroke({ color: '#ffcc33', width: 2 })\r\n                })\r\n            }));\r\n\r\n        },\r\n        selectStation(select_sta_id) {  //选中某个景点\r\n            for (var i = 0; i < this.stationinfo_data_list.length; i++) {\r\n                var m = this.stationinfo_data_list[i];\r\n                var sta_id = m.net_code + \".\" + m.sta_code;\r\n                var name = m.sta_name;\r\n                var statusSign = 0;\r\n                if (select_sta_id == sta_id) {\r\n                    statusSign = 1;\r\n\r\n                    $('#sta_name').text(m.sta_name);\r\n                    $('#sta_type').text(m.sta_type);\r\n                    $('#site_level').text(m.site_level);\r\n                    $('#site_range').text(m.site_range);\r\n                    $('#site_adress').text(m.site_adress);\r\n\r\n                    $('#net_code').text(m.net_code);\r\n                    $('#sta_code').text(m.sta_code);\r\n                    $('#loc').text(m.sta_lon + ',' + m.sta_lat);\r\n                    $('#site_pic').html('<img src=\"/static/images/show/' + m.site_pic + '\" width=\"100%\" height=\"240\"/>');\r\n                    $('#site_introduce').html(\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" + m.site_instroduce);\r\n                  // 如果景点信息中包含官方网址，则将它保存到按钮的 data-url 属性中\r\n                  // 获取景点官方网址\r\n                  var siteUrl = m.site_url;\r\n\r\n                  // 如果存在官方网址，则保存到组件的数据属性中\r\n                  if (siteUrl) {\r\n                    this.siteUrl = siteUrl;\r\n                  } else {\r\n                    // 如果不存在官方网址，则置为null，按钮将不显示\r\n                    this.siteUrl = null;\r\n                  }\r\n                    $(\"#m_site_info\").show();\r\n                }\r\n                this.changeOneMarkerStatus(sta_id, name, statusSign);\r\n            }\r\n        },\r\n        goToSite() {\r\n        // 获取当前选定景点的官方网站链接\r\n        var siteUrl = this.siteUrl;\r\n\r\n        // 如果链接存在，则进行跳转\r\n        if (siteUrl) {\r\n          window.open(siteUrl, '_blank');\r\n        } else {\r\n          alert('未找到景点官方网站链接！');\r\n        }\r\n        },\r\n        rendStationInfoData(type) {  //显示景点\r\n            this.select_sta_type = type;\r\n            if (this.staVectorLayer != null) {\r\n                this.map.removeLayer(this.staVectorLayer);\r\n            }\r\n\r\n            this.staVectorSource = new VectorSource({\r\n                features: []\r\n            });\r\n            this.staVectorLayer = new VectorLayer({\r\n                source: this.staVectorSource\r\n            });\r\n            this.map.addLayer(this.staVectorLayer);\r\n\r\n            if(this.stationinfo_data_list == null){\r\n                return\r\n            }\r\n\r\n            for (var i = 0; i < this.stationinfo_data_list.length; i++) {\r\n                var m = this.stationinfo_data_list[i];\r\n                console.log(m);\r\n                var filerSign = mapcommon.is_show_station(m, this.select_sta_type);\r\n                if (filerSign) {\r\n                    continue;\r\n                }\r\n                var sta01 = mapcommon.buildStationImageMarker(m);\r\n                this.staVectorSource.addFeature(sta01);\r\n            }\r\n\r\n            //为地图容器添加单击事件监听\r\n            let that = this;\r\n            that.map.on('click', function (event) {\r\n                let feature = that.map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\r\n                    return feature;\r\n                })\r\n                if (feature) {\r\n                    console.log(feature.getId());\r\n                    that.selectStation(feature.getId());\r\n                }\r\n            });\r\n\r\n\r\n        },\r\n      rendStationInfoData11(type) {  //显示各景点的强震动参数\r\n        this.select_sta_type = type;\r\n        if (this.staVectorLayer != null) {\r\n          this.map.removeLayer(this.staVectorLayer);\r\n        }\r\n\r\n        this.staVectorSource = new VectorSource({\r\n          features: []\r\n        });\r\n        this.staVectorLayer = new VectorLayer({\r\n          source: this.staVectorSource\r\n        });\r\n        this.map.addLayer(this.staVectorLayer);\r\n\r\n        if(this.real_strong_data_list == null){\r\n          return\r\n        }\r\n\r\n        var curIndex = 1;\r\n        for (var i = 0; i < this.real_strong_data_list.length; i++) {\r\n          var m = this.real_strong_data_list[i];\r\n          console.log(m);\r\n          var filerSign = mapcommon.is_show_station(m, this.select_sta_type);\r\n          if (filerSign) {\r\n            continue;\r\n          }\r\n          var sta01 = mapcommon.buildStationDivMarker(m);\r\n          //console.log(sta01);\r\n          this.staVectorSource.addFeature(sta01);\r\n\r\n          curIndex += 1;\r\n        }\r\n         //为地图容器添加单击事件监听\r\n         let that = this;\r\n            that.map.on('click', function (event) {\r\n                let feature = that.map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\r\n                    return feature;\r\n                })\r\n                if (feature) {\r\n                    console.log(feature.getId());\r\n                    that.selectStation(feature.getId());\r\n                }\r\n            });\r\n      },\r\n      clusterStyle() {  //聚合标注样式\r\n        return (feature, solution) => {\r\n          var total = 0;\r\n          feature.get(\"features\").forEach((value, index) => {\r\n            total += value.get(\"value\");\r\n          });\r\n          var style = new Style({\r\n            image: new CircleStyle({\r\n              radius: 15,\r\n              stroke: new Stroke({\r\n                color: \"blue\"\r\n              }),\r\n              fill: new Fill({\r\n                color: \"rgba(24,144,255,100)\"\r\n              })\r\n            }),\r\n            text: new Text({\r\n              text: total.toString(),\r\n              fill: new Fill({\r\n                color: \"#FFF\"\r\n              }),\r\n              font: \"12px Calibri,sans-serif\",\r\n              stroke: new Stroke({\r\n                color: \"red\",\r\n                width: 5\r\n              })\r\n            })\r\n          });\r\n          return style;\r\n        };\r\n      },\r\n      initCluster(visiable) { //添加聚合图层\r\n\r\n        if (visiable) {\r\n\r\n          if (this.staVectorLayer != null) {\r\n            this.map.removeLayer(this.staVectorLayer);\r\n          }\r\n          if (this.clusterLayer != null) {\r\n            this.map.removeLayer(this.clusterLayer);\r\n          }\r\n\r\n          let source = new VectorSource();\r\n          let clusterSource = new Cluster({\r\n            distance: parseInt(20, 10),\r\n            source: source\r\n          });\r\n          this.clusterLayer = new VectorLayer({\r\n            source: clusterSource,\r\n            style: this.clusterStyle.call(this)\r\n          });\r\n          this.map.addLayer(this.clusterLayer);\r\n          for (var i = 0; i < this.stationinfo_data_list.length; i++) {\r\n            var m = this.stationinfo_data_list[i];\r\n            var latLon = [parseFloat(m.sta_lon), parseFloat(m.sta_lat)];\r\n            var f = new Feature({\r\n              geometry: new Point(latLon)\r\n            });\r\n            f.set(\"name\", m.sta_code);\r\n            f.set(\"value\", 1);\r\n            source.addFeature(f);\r\n          }\r\n        } else {\r\n          if (this.clusterLayer != null) {\r\n            this.map.removeLayer(this.clusterLayer);\r\n            this.rendStationInfoData(this.select_sta_type);\r\n          }\r\n        }\r\n\r\n      },\r\n      //热力图\r\n      initHeatMapLayer(visiable) {   //显示热力图\r\n        if (visiable) {\r\n          if (this.heatData.features.length == 0)\r\n            for (var i = 0; i < this.stationinfo_data_list.length; i++) {\r\n              var m = this.stationinfo_data_list[i];\r\n              var latLon = [parseFloat(m.sta_lon), parseFloat(m.sta_lat)];\r\n              var data = {\r\n                type: \"Feature\",\r\n                geometry: { type: \"Point\", coordinates: latLon },\r\n                properties: { weight: 1 }\r\n              };\r\n              this.heatData.features.push(data);\r\n            }\r\n\r\n          if (this.heatMapLayer != null) {\r\n            this.map.removeLayer(this.heatMapLayer);\r\n          }\r\n          this.heatMapLayer = new HeatmapLayer({\r\n            source: new VectorSource({\r\n              features: new GeoJSON().readFeatures(this.heatData)\r\n            }),\r\n            blur: this.option_heatmap.blur,\r\n            radius: this.option_heatmap.radius,\r\n            weight: (e) => {\r\n              return e.values_.weight;//根据权重展示热力图！关键点，weight范围为：0-1！！！\r\n            },\r\n          });\r\n          this.map.addLayer(this.heatMapLayer);\r\n          this.rendStationInfoData11(this.select_sta_type);\r\n        } else {\r\n          if (this.heatMapLayer != null) {\r\n            this.map.removeLayer(this.heatMapLayer);\r\n            this.rendStationInfoData11(this.select_sta_type);\r\n          }\r\n        }\r\n      },\r\n        initLeftMenu() {  //初始化左侧菜单\r\n            let that = this;\r\n            $(document).on('click', '.left_menu_bar div', function (event) {\r\n                var event_type = event.type;\r\n                var type = $(this).attr('type');\r\n                var action = $(this).attr('action');\r\n                if (type == 'bt') {\r\n                    if (action == 'zoom_in') {\r\n                        var view = that.map.getView();\r\n                        var zoom = view.getZoom();\r\n                        view.setZoom(zoom + 1);\r\n                    } else {\r\n                        var view = that.map.getView();\r\n                        var zoom = view.getZoom();\r\n                        view.setZoom(zoom - 1);\r\n                    }\r\n                }\r\n                else if(type=='add'){\r\n                  $(\"#m_select_range\").hide();\r\n                  $(\"#m_countinfo\").hide();\r\n                  $(\"#m_selectmarker\").hide();\r\n                  $(\"#m_baselayer\").hide();\r\n                  $(\"#m_addsite\").show();\r\n                }\r\n                else if (type == 'mesure') {\r\n                    if(that.select_mesure_type == null || that.select_mesure_type != action){\r\n\r\n                        that.select_mesure_type = action;\r\n                        $(\".left_menu_bar\").find(\"div\").attr(\"class\", \"left_bt_item\");\r\n                        $(this).attr('class', 'left_bt_item_s');\r\n                        if(action == 'mesure_line'){\r\n                            that.measureFun('LineString')\r\n\r\n                        }else if(action == 'mesure_area'){\r\n                            that.measureFun('Polygon')\r\n                        }\r\n                    }else{\r\n                        that.select_mesure_type = null;\r\n                        $(\".left_menu_bar\").find(\"div\").attr(\"class\", \"left_bt_item\");\r\n                        if(action == 'mesure_line'){\r\n\r\n                        }else if(action == 'mesure_area'){\r\n\r\n                        }\r\n                    }\r\n                }\r\n                else if (type == 'theme') {\r\n                  if (that.select_theme_type == null || that.select_theme_type != action) {\r\n                    that.select_theme_type = action;\r\n\r\n                    // $(\".right_menu_bar\").find(\"div\").attr(\"class\", \"right_bt_item\");\r\n                    // $(this).attr('class', 'right_bt_item_s');\r\n                    /*此处有修改！！！！！！！！！！！！！！！！！！！！！！！111*/\r\n                    $(\".left_menu_bar\").find(\"div\").attr(\"class\", \"left_bt_item\");\r\n                    $(this).attr('class', 'left_bt_item_s');\r\n                    if (action == 'image_layer') {\r\n                    } else if (action == 'heat_layer') {\r\n                      that.initHeatMapLayer(true);\r\n                    } else if (action == 'cluster_layer') {\r\n                      that.initCluster(true);\r\n                    }\r\n                  }\r\n                  else {\r\n                    that.select_theme_type = null;\r\n                    $(\".right_menu_bar\").find(\"div\").attr(\"class\", \"right_bt_item\");\r\n                    if (action == 'image_layer') {\r\n                      that.initImageLayer(false);\r\n                    } else if (action == 'heat_layer') {\r\n                      that.initHeatMapLayer(false);\r\n                    } else if (action == 'cluster_layer') {\r\n                      that.initCluster(false);\r\n                    }\r\n                  }\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n        initTopMenu() {  //初始化顶部菜单\r\n            let that = this;\r\n            $(document).on('click', '.top-menu-bar div', function (event) {\r\n                var event_type = event.type;\r\n                var type = $(this).attr('type');\r\n                that.cur_top_menu_select = type;\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n                $(this).attr('class', 'menu-bt-bg-s');\r\n\r\n                if (type == 'baselayer') {\r\n                    $(\"#m_select_range\").hide();\r\n                    $(\"#m_countinfo\").hide();\r\n                    $(\"#m_selectmarker\").hide();\r\n                    $(\"#m_addsite\").hide();\r\n                    $(\"#m_baselayer\").show();\r\n                } else if (type == 'countinfo') {\r\n                    $(\"#m_select_range\").hide();\r\n                    $(\"#m_baselayer\").hide();\r\n                    $(\"#m_selectmarker\").hide();\r\n                    $(\"#m_addsite\").hide();\r\n                    $(\"#m_countinfo\").show();\r\n                } else if (type == 'marker') {\r\n                    $(\"#m_select_range\").hide();\r\n                    $(\"#m_countinfo\").hide();\r\n                    $(\"#m_baselayer\").hide();\r\n                    $(\"#m_addsite\").hide();\r\n                    $(\"#m_selectmarker\").show();\r\n                } else if (type == 'rangelayer') {\r\n                    $(\"#m_select_range\").show();\r\n                    $(\"#m_countinfo\").hide();\r\n                    $(\"#m_baselayer\").hide();\r\n                    $(\"#m_selectmarker\").hide();\r\n                    $(\"#m_addsite\").hide();\r\n                }\r\n            });\r\n\r\n\r\n            //底图图层弹出窗口的关闭事件\r\n            $(document).on(\"click\", \"#m_baselayer_close\", function (event) {\r\n                event.preventDefault();\r\n                $(\"#m_baselayer\").hide();\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n            });\r\n\r\n            //选择边界图层弹出窗口的关闭事件\r\n            $(document).on(\"click\", \"#m_select_range_close\", function (event) {\r\n                event.preventDefault();\r\n                $(\"#m_select_range\").hide();\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n            });\r\n\r\n            //选择标注图层弹出窗口的关闭事件\r\n            $(document).on(\"click\", \"#m_selectmarker_close\", function (event) {\r\n                event.preventDefault();\r\n                $(\"#m_selectmarker\").hide();\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n            });\r\n\r\n            //统计信息图层弹出窗口的关闭事件\r\n            $(document).on(\"click\", \"#m_countinfo_close\", function (event) {\r\n                event.preventDefault();\r\n                $(\"#m_countinfo\").hide();\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n            });\r\n\r\n            //站点信息图层弹出窗口的关闭事件\r\n            $(document).on(\"click\", \"#m_site_info_close\", function (event) {\r\n                event.preventDefault();\r\n                $(\"#m_site_info\").hide();\r\n                $(\".top-menu-bar\").find(\"div\").attr(\"class\", \"menu-bt-bg\");\r\n            });\r\n\r\n        },\r\n        initShowWindow() { //初始化弹出窗的功能\r\n            let that = this;\r\n            $(document).on(\"click\", \".baselayer_select .menu_con\", function (event) {\r\n                event.preventDefault();\r\n                var type = $(this).attr(\"id\");\r\n                $('.baselayer_select .menu_con').attr('class', 'menu_con');\r\n                $(this).attr(\"class\", \"menu_con menu_con_select\");\r\n\r\n                that.changeBaseMap(type);\r\n            });\r\n\r\n            $(document).on(\"click\", \".select_range_type .show_windows_select_content\", function (event) {\r\n                event.preventDefault();\r\n                var type = $(this).attr(\"id\");\r\n                $('.select_range_type .show_windows_select_content').attr('class', 'show_windows_select_content');\r\n                $(this).attr(\"class\", \"show_windows_select_content menu_con_select\");\r\n                that.addForestry(type);\r\n            });\r\n\r\n            $(document).on(\"click\", \".select_marker_type .show_windows_select_content\", function (event) {\r\n                event.preventDefault();\r\n                var type = $(this).attr(\"id\");\r\n                console.log(type);\r\n                $('.select_marker_type .show_windows_select_content').attr('class', 'show_windows_select_content');\r\n                $(this).attr(\"class\", \"show_windows_select_content menu_con_select\");\r\n                that.rendStationInfoData(type);\r\n            });\r\n\r\n        },\r\n      initData() {  //初始化数据\r\n        let that = this;\r\n        $.ajax({\r\n          type: \"get\",\r\n          url: \"/static/data/stationinfo.json?time=\" + new Date().getTime(),\r\n          dataType: \"json\",\r\n          error: function () {\r\n            alert(\"获取数据失败！\");\r\n          },\r\n          success: function (resp) {\r\n\r\n            console.log(resp);\r\n\r\n            that.stationinfo_data_list = resp.data;\r\n            console.log(that.stationinfo_data_list);\r\n            that.select_sta_type = \"all\";\r\n            if (that.staVectorLayer != null) {\r\n              that.map.removeLayer(that.staVectorLayer);\r\n            }\r\n            that.staVectorSource = new VectorSource({\r\n              features: []\r\n            });\r\n            that.staVectorLayer = new VectorLayer({\r\n              source: that.staVectorSource\r\n            });\r\n            that.map.addLayer(that.staVectorLayer);\r\n\r\n\r\n            var curIndex = 1;\r\n            for (var i = 0; i < that.stationinfo_data_list.length; i++) {\r\n              var m = that.stationinfo_data_list[i];\r\n              console.log(m);\r\n              var filerSign = mapcommon.is_show_station(m, that.select_sta_type);\r\n              if (filerSign) {\r\n                continue;\r\n              }\r\n              var sta01 = mapcommon.buildStationImageMarker(m);\r\n              that.staVectorSource.addFeature(sta01);\r\n              curIndex += 1;\r\n            }\r\n          }\r\n        });\r\n      },\r\n      measureFun(option) { // 空间测量\r\n            switch (option) {\r\n                case 'Point':\r\n                    Measure.measure(this.map, 'Point')\r\n                    break\r\n                case 'LineString':\r\n                    Measure.measure(this.map, 'LineString')\r\n                    break\r\n                case 'Polygon':\r\n                    Measure.measure(this.map, 'Polygon')\r\n                    break\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.initData();\r\n        this.initMap();\r\n        this.initTopMenu();\r\n        this.initLeftMenu();\r\n        this.initShowWindow();\r\n        this.addForestry(\"city\");\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";OAcsDA,UAA+C;OAE9CC,UAA2C;OAE/CC,UAA4C;OAEzCC,UAA2C;gCAnB7FC,mBAAA,CAAsC;EAAjCC,KAAK,EAAC,QAAQ;EAACC,EAAE,EAAC;;;EAClBD,KAAK,EAAC;AAAe;gCACtBD,mBAAA,CAA+D;EAA1DC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,IAAI;EAACC,MAAM,EAAC;GAAU,MAAI;gCACzDJ,mBAAA,CAAgE;EAA3DC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,IAAI;EAACC,MAAM,EAAC;GAAW,MAAI;gCAE1DJ,mBAAA,CAAuE;EAAlEC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,QAAQ;EAACC,MAAM,EAAC;GAAc,MAAI;gCACjEJ,mBAAA,CAAuE;EAAlEC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,QAAQ;EAACC,MAAM,EAAC;GAAc,MAAI;gCACjEJ,mBAAA,CAAwE;EAAnEC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,OAAO;EAACC,MAAM,EAAC;GAAgB,MAAI;gCAClEJ,mBAAA,CAAqE;EAAhEC,KAAK,EAAC,cAAc;EAACE,IAAI,EAAC,OAAO;EAACC,MAAM,EAAC;GAAa,MAAI;;;EAsB9DH,KAAK,EAAC,kBAAkB;EAACC,EAAE,EAAC,aAAa;EAACG,KAAsC,EAAtC;IAAA;IAAA;EAAA;;;;EA0ExCJ,KAAK,EAAC,8BAA8B;EAACC,EAAE,EAAC;;;;EAE/BD,KAAK,EAAC;;;;;;;;6DA1GtBK,UAAsC,EACtCN,mBAAA,CAQM,OARNO,UAQM,GAPFC,UAA+D,EAC/DC,UAAgE,EAChET,mBAAA,CAA0E;IAArEC,KAAK,EAAC,cAAc;IAACE,IAAI,EAAC,KAAK;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;KAAE,MAAI,GACpEG,UAAuE,EACvEC,UAAuE,EACvEC,UAAwE,EACxEC,UAAqE,C,GAGzEC,UAAuB,EAYvBC,YAAA,CAA6BC,uBAAA,GAC7BD,YAAA,CAAyBE,qBAAA,GACzBF,YAAA,CAAuBG,oBAAA,GACvBH,YAAA,CAAyBI,qBAAA,GACzBJ,YAAA,CAAqBK,mBAAA,GAErBC,mBAAA,aAAgB,EAChB1B,mBAAA,CA8EM,OA9EN2B,WA8EM,GA7EFC,WAA2F,EAyE7F5B,mBAAA,CAGM,OAHN6B,WAGM,GAFUC,KAAA,CAAAC,OAAO,I,cAArBC,mBAAA,CAA+E;;IAAxD/B,KAAK,EAAC,cAAc;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAoB,QAAA,IAAApB,QAAA,CAAAoB,QAAA,IAAArB,IAAA,CAAQ;KAAE,UAAQ,M,cACtEoB,mBAAA,CAA8G,KAA9GE,WAA8G,EAA3D,iBAAuD,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}