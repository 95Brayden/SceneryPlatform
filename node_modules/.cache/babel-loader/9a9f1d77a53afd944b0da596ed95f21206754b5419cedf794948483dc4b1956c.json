{"ast":null,"code":"/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\nexport default BuilderGroup;","map":{"version":3,"names":["Builder","ImageBuilder","LineStringBuilder","PolygonBuilder","TextBuilder","BATCH_CONSTRUCTORS","BuilderGroup","constructor","tolerance","maxExtent","resolution","pixelRatio","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","finish","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","undefined","toString","replays","replay","Constructor"],"sources":["E:/Desktop/scenerymonitor/node_modules/ol/render/canvas/BuilderGroup.js"],"sourcesContent":["/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,WAAW,MAAM,kBAAkB;;AAE1C;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG;EACzB,QAAQ,EAAEF,cAAc;EACxB,SAAS,EAAEH,OAAO;EAClB,OAAO,EAAEC,YAAY;EACrB,YAAY,EAAEC,iBAAiB;EAC/B,SAAS,EAAEC,cAAc;EACzB,MAAM,EAAEC;AACV,CAAC;AAED,MAAME,YAAY,CAAC;EACjB;AACF;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAE;IACxD;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAGJ,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACK,UAAU,GAAGJ,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACK,WAAW,GAAGH,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACI,WAAW,GAAGL,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACM,iBAAiB,GAAG,CAAC,CAAC;EAC7B;;EAEA;AACF;AACA;EACEC,MAAMA,CAAA,EAAG;IACP,MAAMC,mBAAmB,GAAG,CAAC,CAAC;IAC9B,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,iBAAiB,EAAE;MACzCE,mBAAmB,CAACC,IAAI,CAAC,GAAGD,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC3D,MAAMC,QAAQ,GAAG,IAAI,CAACJ,iBAAiB,CAACG,IAAI,CAAC;MAC7C,KAAK,MAAME,UAAU,IAAID,QAAQ,EAAE;QACjC,MAAME,kBAAkB,GAAGF,QAAQ,CAACC,UAAU,CAAC,CAACJ,MAAM,CAAC,CAAC;QACxDC,mBAAmB,CAACC,IAAI,CAAC,CAACE,UAAU,CAAC,GAAGC,kBAAkB;MAC5D;IACF;IACA,OAAOJ,mBAAmB;EAC5B;;EAEA;AACF;AACA;AACA;AACA;EACEK,UAAUA,CAACC,MAAM,EAAEC,WAAW,EAAE;IAC9B,MAAMC,SAAS,GAAGF,MAAM,KAAKG,SAAS,GAAGH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,GAAG;IAChE,IAAIC,OAAO,GAAG,IAAI,CAACb,iBAAiB,CAACU,SAAS,CAAC;IAC/C,IAAIG,OAAO,KAAKF,SAAS,EAAE;MACzBE,OAAO,GAAG,CAAC,CAAC;MACZ,IAAI,CAACb,iBAAiB,CAACU,SAAS,CAAC,GAAGG,OAAO;IAC7C;IACA,IAAIC,MAAM,GAAGD,OAAO,CAACJ,WAAW,CAAC;IACjC,IAAIK,MAAM,KAAKH,SAAS,EAAE;MACxB,MAAMI,WAAW,GAAG1B,kBAAkB,CAACoB,WAAW,CAAC;MACnDK,MAAM,GAAG,IAAIC,WAAW,CACtB,IAAI,CAACnB,UAAU,EACf,IAAI,CAACC,UAAU,EACf,IAAI,CAACE,WAAW,EAChB,IAAI,CAACD,WACP,CAAC;MACDe,OAAO,CAACJ,WAAW,CAAC,GAAGK,MAAM;IAC/B;IACA,OAAOA,MAAM;EACf;AACF;AAEA,eAAexB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}