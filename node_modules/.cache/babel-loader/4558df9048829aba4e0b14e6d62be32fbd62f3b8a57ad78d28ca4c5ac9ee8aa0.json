{"ast":null,"code":"export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n  get littleEndian() {\n    return this._littleEndian;\n  }\n  get bigTiff() {\n    return this._bigTiff;\n  }\n  get buffer() {\n    return this._dataView.buffer;\n  }\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n  readUint8(offset) {\n    return this._dataView.getUint8(offset - this._sliceOffset, this._littleEndian);\n  }\n  readInt8(offset) {\n    return this._dataView.getInt8(offset - this._sliceOffset, this._littleEndian);\n  }\n  readUint16(offset) {\n    return this._dataView.getUint16(offset - this._sliceOffset, this._littleEndian);\n  }\n  readInt16(offset) {\n    return this._dataView.getInt16(offset - this._sliceOffset, this._littleEndian);\n  }\n  readUint32(offset) {\n    return this._dataView.getUint32(offset - this._sliceOffset, this._littleEndian);\n  }\n  readInt32(offset) {\n    return this._dataView.getInt32(offset - this._sliceOffset, this._littleEndian);\n  }\n  readFloat32(offset) {\n    return this._dataView.getFloat32(offset - this._sliceOffset, this._littleEndian);\n  }\n  readFloat64(offset) {\n    return this._dataView.getFloat64(offset - this._sliceOffset, this._littleEndian);\n  }\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + 2 ** 32 * right;\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(`${combined} exceeds MAX_SAFE_INTEGER. ` + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues');\n      }\n      return combined;\n    }\n    combined = 2 ** 32 * left + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(`${combined} exceeds MAX_SAFE_INTEGER. ` + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues');\n    }\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (this._littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * 256 ** i;\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}","map":{"version":3,"names":["DataSlice","constructor","arrayBuffer","sliceOffset","littleEndian","bigTiff","_dataView","DataView","_sliceOffset","_littleEndian","_bigTiff","sliceTop","buffer","byteLength","covers","offset","length","readUint8","getUint8","readInt8","getInt8","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readInt32","getInt32","readFloat32","getFloat32","readFloat64","getFloat64","readUint64","left","right","combined","Number","isSafeInteger","Error","readInt64","value","isNegative","carrying","i","byte","readOffset"],"sources":["E:/Desktop/SceneryPlatform_v3.0_LTS/node_modules/geotiff/dist-module/dataslice.js"],"sourcesContent":["export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}